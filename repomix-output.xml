This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.claude/
  settings.local.json
gradle/
  wrapper/
    gradle-wrapper.properties
src/
  main/
    java/
      edu/
        yonsei/
          hello_james/
            controller/
              ApiController.java
              AuthController.java
              ViewController.java
            Dto/
              FacilityDto.java
              InternalDto.java
              RouteDto.java
              RouteStopDto.java
              StopDto.java
              UserDto.java
            entity/
              Facility.java
              Internal.java
              Route.java
              RouteStop.java
              Stop.java
              User.java
            repository/
              FacilityRepository.java
              InternalRepository.java
              RouteRepository.java
              RouteStopRepository.java
              StopRepository.java
              UserRepository.java
            security/
              SecurityConfig.java
            service/
              CustomUserDetailsService.java
              FacilityService.java
              ImageService.java
              InternalService.java
              RouteService.java
              RouteStopService.java
              StopService.java
              UserService.java
            HelloJamesApplication.java
            WebConfig.java
    resources/
      static/
        common/
          basestyle.css
          navbar.js
        last/
          facilities/
            nextstyle.css
          facility.js
          facilitystyle.css
          main.js
          mainstyle.css
          restaurant.html
          transportation.css
          transportation.js
        login-page/
          css 파일.css
          style.css
      templates/
        !DOCTYPE.html
        admin.html
        adminfacilities.html
        adminimages.html
        admininternals.html
        adminroutes.html
        adminrouteStops.html
        adminstops.html
        adminusers.html
        facility.html
        facilityForm.html
        facilityInternal.html
        fuck.html
        imageForm.html
        index.html
        internalForm.html
        join.html
        login.html
        mainPage.html
        restaurant.html
        routeform.html
        routeStopForm.html
        stopForm.html
        transportation.html
        transportSearchPage.html
        upload.html
        userForm.html
      application.properties
      data.sql
  test/
    java/
      edu/
        yonsei/
          hello_james/
            HelloJamesApplicationTests.java
.gitattributes
.gitignore
build.gradle
CLAUDE.md
gradlew
gradlew.bat
settings.gradle
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".claude/settings.local.json">
{
  "permissions": {
    "allow": [
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/**)",
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/**)",
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/**)",
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/**)",
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/src/main/resources/**)",
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/src/main/java/edu/yonsei/hello_james/**)",
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/src/main/java/edu/yonsei/hello_james/**)",
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/src/main/java/edu/yonsei/hello_james/security/**)",
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/src/main/java/edu/yonsei/hello_james/controller/**)",
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/src/main/java/edu/yonsei/hello_james/entity/**)",
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/src/main/resources/**)",
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/src/test/java/edu/yonsei/hello_james/**)",
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/src/main/java/edu/yonsei/hello_james/**)",
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/src/main/resources/**)",
      "Read(/Users/kimseojin/Desktop/hello-james 내꺼추가하기/src/main/java/edu/yonsei/hello_james/**)"
    ],
    "deny": [],
    "ask": []
  }
}
</file>

<file path="src/main/resources/static/login-page/css 파일.css">
body {
    margin: 0;
    padding: 0;
    font-family: '맑은 고딕', 'Malgun Gothic', sans-serif;
    background: #ffffff;
}

.login-container {
    width: 320px;
    margin: 40px auto;
    border: 2px solid #005BAC;
    border-radius: 10px;
    box-shadow: 0px 0px 10px rgba(0,0,0,0.1);
    text-align: center;
}

.header {
    background-color: #005BAC;
    color: white;
    font-size: 16px;
    padding: 10px 0;
    font-weight: bold;
    border-top-left-radius: 8px;
    border-top-right-radius: 8px;
}

.logo {
    width: 150px;            
    height: auto;
    margin: 20px auto;
    display: block;
    
}

form {
    display: flex;
    flex-direction: column;
    padding: 0 20px 20px 20px;
}

input[type="text"],
input[type="password"] {
    margin: 10px 0;
    padding: 10px;
    font-size: 14px;
    border: 1px solid #999;
    border-radius: 4px;
    box-shadow: inset 0 1px 2px rgba(0,0,0,0.1);
}

.options {
    display: flex;
    justify-content: space-between;
    font-size: 12px;
    margin: 10px 0;
}

button {
    padding: 10px;
    background-color: #005BAC;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
    margin-top: 10px;
}

button:hover {
    background-color: #004080;
}
</file>

<file path="gradle/wrapper/gradle-wrapper.properties">
distributionBase=GRADLE_USER_HOME
distributionPath=wrapper/dists
distributionUrl=https\://services.gradle.org/distributions/gradle-8.13-bin.zip
networkTimeout=10000
validateDistributionUrl=true
zipStoreBase=GRADLE_USER_HOME
zipStorePath=wrapper/dists
</file>

<file path="src/main/java/edu/yonsei/hello_james/controller/AuthController.java">
package edu.yonsei.hello_james.controller;

import edu.yonsei.hello_james.service.UserService;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import java.security.Principal;
import java.util.HashMap;
import java.util.Map;

//@Controller
//public class AuthController {
//
//    private final UserService userService;
//
//    public AuthController(UserService userService) {
//        this.userService = userService;
//    }
//
//
//    @GetMapping("/login")
//    public String login() {
//        return "login"; // login.html 템플릿 반환
//    }
//
//    @GetMapping("/join")
//    public String showRegistrationForm() {
//        return "join"; // join.html 템플릿 반환
//    }
//
//    @PostMapping("/join")
//    public String registerUser(@RequestParam String username, @RequestParam String password) {
//        userService.registerNewUser(username, password);
//        return "redirect:/login?registered=true"; // 회원가입 성공 후 로그인 페이지로 리다이렉트
//    }
//
//
//}

@Controller
public class AuthController {

    private final UserService userService;

    public AuthController(UserService userService) {
        this.userService = userService;
    }


    @GetMapping("/login")
    public String login() {
        return "login"; // login.html 템플릿 반환
    }

    @GetMapping("/join")
    public String showRegistrationForm() {
        return "join"; // join.html 템플릿 반환
    }

    @PostMapping("/join")
    public String registerUser(@RequestParam String username, @RequestParam String password) {
        userService.registerNewUser(username, password);
        return "redirect:/login?registered=true"; // 회원가입 성공 후 로그인 페이지로 리다이렉트
    }

    // Add endpoint to return authentication status
    @GetMapping("/api/auth/status")
    @ResponseBody
    public Map<String, Object> authStatus(Principal principal) {
        Map<String, Object> result = new HashMap<>();
        result.put("authenticated", principal != null);
        if (principal != null) {
            result.put("username", principal.getName());
        }
        return result;
    }

}
</file>

<file path="src/main/java/edu/yonsei/hello_james/controller/ViewController.java">
package edu.yonsei.hello_james.controller;

import edu.yonsei.hello_james.Dto.*;
import edu.yonsei.hello_james.entity.*;
import edu.yonsei.hello_james.service.*;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.io.IOException;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

@Slf4j
@Controller
@RequiredArgsConstructor
public class ViewController {

    private final FacilityService facilityService;
    private final UserService userService;
    private final StopService stopService;
    private final RouteService routeService;
    private final RouteStopService routeStopService;
    private final InternalService internalService;
    private final ImageService imageService;


    @GetMapping
    public String MainPage(Model model) {

        return "MainPage";
    }


    @GetMapping("/restaurant")
    public String restaurant(Model model) {

        return "restaurant";
    }


    @GetMapping("/facility")
    public String FactilityPage(Model model) {

        List<Facility> facilities = facilityService.findFacilityAll().stream()
                .toList();

        model.addAttribute("facilities", facilities);

        return "facility";
    }






    @GetMapping("/facilities/{name}")
    public String FacilitiesPage(@PathVariable String name, Model model) {
        Facility facility = facilityService.findFacilityByName(name)
                .orElse(new Facility());
        List<Internal> internals = facility.getInternals();

        model.addAttribute("facility", facility);
        model.addAttribute("internals", internals);

        return "facilityInternal";
    }


    @GetMapping("/transportation")
    public String TransportationPage(Model model) {
        List<Stop> stops = stopService.findStopAll();
        model.addAttribute("stops", stops);
        return "transportation";
    }




    @GetMapping("/transportation/search")
    public String TransportationSearchPage(@RequestParam String departure, @RequestParam String arrival, Model model) {


        List<Route> matchingRoutes = routeStopService.findRoutesByStartAndEndStops(departure, arrival);

//        log.info("Routes found: hhh" + matchingRoutes);
        model.addAttribute("routes", matchingRoutes);


        return "transportSearchPage";
    }


    @GetMapping("/images")
    public String imageUpload() {
        return "upload";
    }

    @GetMapping("/ad")
    public String AdminPage(Model model) {

        model.addAttribute("facilities", facilityService.findFacilityAll());
        model.addAttribute("stops", stopService.findStopAll());
        model.addAttribute("routes", routeService.findRouteAll());
        model.addAttribute("routeStops", routeStopService.findRouteStopAll());
        model.addAttribute("internals", internalService.findInternalAll());
        model.addAttribute("users", userService.findUserAll());


        return "admin";
    }



    @GetMapping("/ad/{entity}")
    public String AdminPage(Model model, @PathVariable String entity) {

        model.addAttribute("facilities", facilityService.findFacilityAll());
        model.addAttribute("stops", stopService.findStopAll());
        model.addAttribute("routes", routeService.findRouteAll());
        model.addAttribute("routeStops", routeStopService.findRouteStopAll());
        model.addAttribute("internals", internalService.findInternalAll());
        model.addAttribute("users", userService.findUserAll());


        return "admin"+entity;
    }




    @GetMapping("ad/facilities/new")
    public String FactilityNewPage(Model model) {
        return "facilityForm";
    }

    @GetMapping("ad/facilities/{name}")
    public String facilitiesSpecificApi(@PathVariable String name,Model model) {
        Facility facility = facilityService.findFacilityByName(name)
                .orElse(new Facility());

        List<Internal> internals = facility.getInternals();

        model.addAttribute("interanals", internals);
        model.addAttribute("facilitiyName", name);

        return "admininternals";
    }


    @PostMapping("ad/facilities")
    public String facilitiesApi(@ModelAttribute FacilityDto facilityDto) {
        // 파일 검증
        if (facilityDto.getImageFile().isEmpty()) {
            throw new IllegalArgumentException("이미지 파일이 필요합니다.");
        }

        // 파일 타입 검증
        String contentType = facilityDto.getImageFile().getContentType();
        if (contentType == null || !contentType.startsWith("image/")) {
            throw new IllegalArgumentException("이미지 파일만 업로드 가능합니다.");
        }

        try {
            // 파일 저장
            String imagePath = imageService.saveImageFile(facilityDto.getImageFile());


            System.out.println("시설 등록 완료: " + facilityDto.getName());


            facilityService.saveFacility(facilityDto);
            return "redirect:/ad/facilities";



        } catch (IOException e) {
            throw new RuntimeException("파일 저장 중 오류가 발생했습니다.", e);
        }
    }










    @GetMapping("ad/routes/new")
    public String RoutesNewPage(Model model) {
        return "routeForm";
    }

    @PostMapping("ad/routes")
    public String routesApi(@RequestBody RouteDto routeDto) {
        routeService.saveRoute(routeDto);
        return "redirect:/ad/routes";
    }




    @GetMapping("ad/stops/new")
    public String StopNewPage(Model model) {
        return "stopForm";

    }
    @PostMapping("ad/stops")
    public String stopsApi(@RequestBody StopDto stopDto) {
        stopService.saveStop(stopDto);
        return "redirect:/ad/stops";
    }




    @GetMapping("ad/facilities/{name}/internals/new")
    public String InternalsNewPage(Model model, @PathVariable String name) {

        return "internalForm";
    }

    @PostMapping("ad/facilities/{name}/internals")
    public String internalsApi(@ModelAttribute InternalDto internalDto, @PathVariable String name) {
        // 파일 검증
        if (internalDto.getImageFile().isEmpty()) {
            throw new IllegalArgumentException("이미지 파일이 필요합니다.");
        }

        // 파일 타입 검증
        String contentType = internalDto.getImageFile().getContentType();
        if (contentType == null || !contentType.startsWith("image/")) {
            throw new IllegalArgumentException("이미지 파일만 업로드 가능합니다.");
        }

        try {

            String imagePath = imageService.saveImageFile(internalDto.getImageFile());

            System.out.println("시설 등록 완료: " + internalDto.getName());



            internalService.saveInternal(name, internalDto);
            return "redirect:/ad/facilities";



        } catch (IOException e) {
            throw new RuntimeException("파일 저장 중 오류가 발생했습니다.", e);
        }
    }


























    @GetMapping("ad/users/new")
    public String usersNewPage(Model model) {
        return "userForm";
    }

    @PostMapping("ad/users")
    public String UserApi(@RequestBody UserDto userDto) {
        userService.saveUser(userDto);
        return "redirect:/ad/facilities";
    }


    @GetMapping("ad/routeStops/new")
    public String routeStopsNewPage(Model model) {
        return "routeStopForm";
    }
    @PostMapping("ad/routeStops")
    public String routeStopsNewPage(@RequestBody RouteStopDto routeStopDto) {
        routeStopService.saveRouteStop(routeStopDto);
        return "redirect:/ad/routeStops";
    }





    //update
    @GetMapping("ad/facilities/{id}/update")
    public String FactilityupdatePage(Model model, @PathVariable Long id) {

        Facility facility = facilityService.findFacilityById(id)
                        .orElse(new Facility());

        model.addAttribute("facility",facility);

        return "facilityForm";
    }

    @GetMapping("ad/routes/{id}/update")
    public String RoutesupdatePage(Model model, @PathVariable Long id) {

        Route route = routeService.findRouteById(id)
                .orElse(new Route());

        model.addAttribute("route",route);

        return "routeForm";
    }

    @GetMapping("ad/stops/{id}/update")
    public String StopupdatePage(Model model, @PathVariable Long id) {

        Stop stop = stopService.findStopById(id)
                .orElse(new Stop());

        model.addAttribute("Stop",stop);

        return "stopForm";
    }


    @GetMapping("ad/internals/{id}/update")
    public String InternalsupdatePage(Model model, @PathVariable Long id) {

        Internal internal = internalService.findInternalById(id)
                .orElse(new Internal());

        model.addAttribute("internal",internal);

        return "internalForm";
    }

//    @GetMapping("/images/{id}/update")
//    public String ImagesupdatePage(Model model, @PathVariable Long id) {
//
//        Image image = imageService.findImageById(id)
//                .orElse(new Image());
//
//        model.addAttribute("image",image);
//        return "imageForm";
//    }


    @GetMapping("ad/users/{id}/update")
    public String usersupdatePage(Model model, @PathVariable Long id) {
        User user = userService.findUserById(id)
                .orElse(new User());

        model.addAttribute("user",user);
        return "userForm";
    }

//    @GetMapping("/routeStops/{id}/update")
//    public String routeStopsupdatePage(Model model, @PathVariable Long id) {
//
//        RouteStop routeStop = RouteStopService.findRouteStopById(id)
//                .orElse(new RouteStop());
//
//        model.addAttribute("routeStop",routeStop);
//        return "routeStopForm";
//    }




}
</file>

<file path="src/main/java/edu/yonsei/hello_james/Dto/FacilityDto.java">
package edu.yonsei.hello_james.Dto;

import edu.yonsei.hello_james.entity.Facility;
import lombok.Data;
import lombok.Getter;
import lombok.Setter;
import org.modelmapper.ModelMapper;
import org.springframework.web.multipart.MultipartFile;

@Getter
@Setter
@Data

public class FacilityDto {

    private String name;
    private String address;
    private String explanation;
    private String operation;
    private String category;

//  DTo에서 이미지 파일을 가져오고   엔티티에서는 imagePath를 가진다.
    private MultipartFile imageFile;



    private static ModelMapper modelMapper = new ModelMapper();

    public Facility toFacility() {
        return modelMapper.map(this, Facility.class);
    }

    public static FacilityDto toFacilityDto(Facility Facility) {
        return modelMapper.map(Facility, FacilityDto.class);
    }
    
}
</file>

<file path="src/main/java/edu/yonsei/hello_james/Dto/InternalDto.java">
package edu.yonsei.hello_james.Dto;

import edu.yonsei.hello_james.entity.Internal;
import edu.yonsei.hello_james.entity.Stop;
import lombok.Data;
import lombok.Getter;
import lombok.Setter;
import org.modelmapper.ModelMapper;
import org.springframework.web.multipart.MultipartFile;

@Data
@Getter
@Setter
public class InternalDto {
    private String name;

    private String address;

    private String operation;

    private String explanation;



    private MultipartFile imageFile;





    private static ModelMapper modelMapper = new ModelMapper();

    public Internal toInternal() {
        return modelMapper.map(this, Internal.class);
    }

    public static InternalDto toInternalDto(Internal internal) {
        return modelMapper.map(internal, InternalDto.class);
    }



}
</file>

<file path="src/main/java/edu/yonsei/hello_james/Dto/RouteDto.java">
package edu.yonsei.hello_james.Dto;

import edu.yonsei.hello_james.entity.Facility;
import edu.yonsei.hello_james.entity.Route;
import edu.yonsei.hello_james.entity.RouteStop;
import jakarta.persistence.OneToMany;
import lombok.Data;
import org.modelmapper.ModelMapper;

import java.time.LocalTime;
import java.util.List;
@Data
public class RouteDto {

    private LocalTime startTime;
    private String day ;

    private String name;

    private String explanation;

    private Long  busNumber;


    private static ModelMapper modelMapper = new ModelMapper();

    public Route toRoute() {
        return modelMapper.map(this, Route.class);
    }

    public static RouteDto toRouteDto(Route route) {
        return modelMapper.map(route, RouteDto.class);
    }


}
</file>

<file path="src/main/java/edu/yonsei/hello_james/Dto/RouteStopDto.java">
package edu.yonsei.hello_james.Dto;

import lombok.Data;

import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.List;

@Data
public class RouteStopDto {

    LocalTime startTime;
    String day;
    List<StopDto> stops;


}
</file>

<file path="src/main/java/edu/yonsei/hello_james/Dto/StopDto.java">
package edu.yonsei.hello_james.Dto;

import edu.yonsei.hello_james.entity.Facility;
import edu.yonsei.hello_james.entity.RouteStop;
import edu.yonsei.hello_james.entity.Stop;
import jakarta.persistence.OneToMany;
import lombok.Data;
import org.modelmapper.ModelMapper;

import java.util.List;

@Data
public class StopDto {
    private String name;


    private String explanation;

    private String imagePath ;
    private String location;


    private static ModelMapper modelMapper = new ModelMapper();

    public Stop toStop() {
        return modelMapper.map(this, Stop.class);
    }

    public static StopDto toStopDto(Stop stop) {
        return modelMapper.map(stop, StopDto.class);
    }




}
</file>

<file path="src/main/java/edu/yonsei/hello_james/Dto/UserDto.java">
package edu.yonsei.hello_james.Dto;


import edu.yonsei.hello_james.entity.User;
import lombok.Data;
import lombok.Getter;
import lombok.Setter;
import org.modelmapper.ModelMapper;

@Getter
@Setter
@Data
public class UserDto {
    private String name;
    private String email;

    private static ModelMapper modelMapper = new ModelMapper();

    public User toUser() {
        return modelMapper.map(this, User.class);
    }

    public static UserDto toUserDto(User user) {
        return modelMapper.map(user, UserDto.class);
    }

}
</file>

<file path="src/main/java/edu/yonsei/hello_james/entity/Facility.java">
package edu.yonsei.hello_james.entity;



import edu.yonsei.hello_james.Dto.FacilityDto;
import jakarta.persistence.*;
import lombok.Getter;
import lombok.Setter;

import java.util.ArrayList;
import java.util.List;

@Entity
@Getter
@Setter
public class Facility {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id ;

    private String name;

    private String address;

    private String operation;

    private String explanation;


    private String category;

    @Column(name = "image_path")
    private String imagePath;


    @OneToMany(mappedBy = "facility")
    private List<Internal> internals = new ArrayList<>();

    public void updateFacility(FacilityDto FacilityDto) {
        this.name = FacilityDto.getName();
        this.address = FacilityDto.getAddress();

        this.explanation = FacilityDto.getExplanation();
        this.operation = FacilityDto.getOperation();
        this.category = FacilityDto.getCategory();

    }

}
</file>

<file path="src/main/java/edu/yonsei/hello_james/entity/Internal.java">
package edu.yonsei.hello_james.entity;


import edu.yonsei.hello_james.Dto.FacilityDto;
import edu.yonsei.hello_james.Dto.InternalDto;
import jakarta.persistence.*;
import lombok.Data;

@Entity
@Data
public class Internal {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id ;

    private String name;

    private String address;

    private String operation;

    private String explanation;

    @Column(name = "image_path")
    private String imagePath;

    @ManyToOne
    @JoinColumn(name="facilityId")
    private Facility facility;



    public void updateInternal(InternalDto internalDto) {

        this.name = internalDto.getName();
        this.address = internalDto.getAddress();
        this.explanation = internalDto.getExplanation();
        this.operation = internalDto.getOperation();



    }

}
</file>

<file path="src/main/java/edu/yonsei/hello_james/entity/Route.java">
package edu.yonsei.hello_james.entity;

import edu.yonsei.hello_james.Dto.FacilityDto;
import edu.yonsei.hello_james.Dto.RouteDto;
import jakarta.persistence.*;
import lombok.Data;

import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;

@Entity
@Data
public class Route {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;


    private LocalTime startTime;
    private String day;

    private String name;

    private String explanation;

    private Long  busNumber;


    @OneToMany(mappedBy = "route")
    private List<RouteStop> routeStops = new ArrayList<>();



    public void updateRoute(RouteDto RouteDto) {
        this.name = RouteDto.getName();
        this.explanation = RouteDto.getExplanation();
        this.busNumber = RouteDto.getBusNumber();
        this.day = RouteDto.getDay();

    }



}
</file>

<file path="src/main/java/edu/yonsei/hello_james/entity/RouteStop.java">
package edu.yonsei.hello_james.entity;

import edu.yonsei.hello_james.Dto.FacilityDto;
import edu.yonsei.hello_james.Dto.RouteStopDto;
import jakarta.persistence.*;
import lombok.Data;
import lombok.Getter;
import lombok.Setter;

import java.time.LocalTime;

@Entity
@Data
@Getter
@Setter
public class RouteStop {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;


    // 정류장 순서
    private int stopOrder;

    // 예정 도착 시간
    private LocalTime arrivalTime;


    @ManyToOne
    @JoinColumn(name="routeId")
    private Route route;

    @ManyToOne
    @JoinColumn(name="stopId")
    private Stop stop;



}
</file>

<file path="src/main/java/edu/yonsei/hello_james/entity/Stop.java">
package edu.yonsei.hello_james.entity;

import edu.yonsei.hello_james.Dto.FacilityDto;
import edu.yonsei.hello_james.Dto.StopDto;
import jakarta.persistence.*;
import lombok.Data;

import java.util.ArrayList;
import java.util.List;

@Entity
@Data
public class Stop {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String name;

    @OneToMany(mappedBy = "stop")
    List<RouteStop> routeStops = new ArrayList<>();

    private String explanation;

    private String imagePath ;

    private String location;


    public void updateStop(StopDto StopDto) {
        this.name = StopDto.getName();
        this.imagePath = StopDto.getImagePath();
        this.explanation = StopDto.getExplanation();
        this.location = StopDto.getLocation();

    }




}
</file>

<file path="src/main/java/edu/yonsei/hello_james/entity/User.java">
package edu.yonsei.hello_james.entity;

import edu.yonsei.hello_james.Dto.UserDto;
import jakarta.persistence.*;
import lombok.*;

import java.util.Set;
import java.util.HashSet;

@Entity
@Data
public class User {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String name;
    private String email;
    private String password;



    @ElementCollection(fetch = FetchType.EAGER) // 또는 @ManyToMany로 Role 엔티티와 매핑
    @CollectionTable(name = "user_roles", joinColumns = @JoinColumn(name = "user_id"))
    @Column(name = "role_name")
    private Set<String> roles = new HashSet<>(); // 예: "ROLE_USER", "ROLE_ADMIN"

    // 편의 메서드
    public void addRole(String role) {
        this.roles.add(role);
    }

    public void updateUser(UserDto userDto) {
        this.email=userDto.getEmail();
        this.name = userDto.getName();
    }

}
</file>

<file path="src/main/java/edu/yonsei/hello_james/repository/FacilityRepository.java">
package edu.yonsei.hello_james.repository;

import edu.yonsei.hello_james.entity.Facility;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.repository.CrudRepository;

import java.util.Optional;

public interface FacilityRepository extends JpaRepository<Facility, Long> {
    Optional<Facility> findByName(String name);
}
</file>

<file path="src/main/java/edu/yonsei/hello_james/repository/InternalRepository.java">
package edu.yonsei.hello_james.repository;

import edu.yonsei.hello_james.entity.Internal;
import edu.yonsei.hello_james.entity.Stop;
import org.springframework.data.jpa.repository.JpaRepository;

import java.util.Optional;

public interface InternalRepository extends JpaRepository<Internal, Long> {
    Optional<Internal> findByName(String name);
}
</file>

<file path="src/main/java/edu/yonsei/hello_james/repository/RouteRepository.java">
package edu.yonsei.hello_james.repository;

import edu.yonsei.hello_james.entity.Route;
import edu.yonsei.hello_james.entity.User;
import org.springframework.data.jpa.repository.JpaRepository;

import java.util.Optional;

public interface RouteRepository extends JpaRepository<Route, Long> {
    Optional<Route> findByName(String name);
}
</file>

<file path="src/main/java/edu/yonsei/hello_james/repository/RouteStopRepository.java">
package edu.yonsei.hello_james.repository;

import edu.yonsei.hello_james.entity.Route;
import edu.yonsei.hello_james.entity.RouteStop;
import edu.yonsei.hello_james.entity.Stop;
import edu.yonsei.hello_james.entity.User;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import java.util.List;
import java.util.Optional;

public interface RouteStopRepository extends JpaRepository<RouteStop, Long> {

    @Query("SELECT DISTINCT rs1.route " +
            "FROM RouteStop rs1 " +
            "JOIN RouteStop rs2 ON rs1.route = rs2.route " +
            "WHERE rs1.stop = :startStop " +
            "AND rs2.stop = :endStop " +
            "AND rs1.stopOrder < rs2.stopOrder")
    List<Route> findRoutesByStartStopAndEndStop(@Param("startStop") Stop startStop, @Param("endStop") Stop endStop);



}
</file>

<file path="src/main/java/edu/yonsei/hello_james/repository/StopRepository.java">
package edu.yonsei.hello_james.repository;

import edu.yonsei.hello_james.entity.Stop;
import edu.yonsei.hello_james.entity.User;
import org.springframework.data.jpa.repository.JpaRepository;

import java.util.Optional;

public interface StopRepository extends JpaRepository<Stop, Long> {
    Optional<Stop> findByName(String name);

}
</file>

<file path="src/main/java/edu/yonsei/hello_james/repository/UserRepository.java">
package edu.yonsei.hello_james.repository;

import edu.yonsei.hello_james.entity.User;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.repository.CrudRepository;

import java.util.Optional;

public interface UserRepository extends JpaRepository<User, Long> {
    Optional<User> findByName(String name);
}
</file>

<file path="src/main/java/edu/yonsei/hello_james/security/SecurityConfig.java">
package edu.yonsei.hello_james.security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configurers.CsrfConfigurer;
import org.springframework.security.config.annotation.web.configurers.HeadersConfigurer;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.util.matcher.AntPathRequestMatcher;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
                .csrf(csrf -> csrf.disable()) // REST API의 경우 보통 비활성화
                .authorizeHttpRequests(authorize -> authorize
                        .requestMatchers("/login", "/join", "/css/**", "/js/**").permitAll() // 로그인, 회원가입 페이지 등은 모든 사용자 접근 허용
                        .requestMatchers("/admin/**").hasRole("ADMIN") // /admin 경로에는 ADMIN 역할만 접근 허용
                        .requestMatchers("/", "/transportation/**", "/facility/**").permitAll()
//                        .anyRequest().authenticated() // 그 외 모든 요청은 인증된 사용자만 접근 허용
                        .anyRequest().permitAll() // 그 외 모든 요청은    모두 허용
                )
                .formLogin(form -> form
                        .loginPage("/login") // 커스텀 로그인 페이지 경로
                        .loginProcessingUrl("/perform_login") // 로그인 폼 제출 시 처리할 URL (스프링 시큐리티가 처리)
                        .defaultSuccessUrl("/", true) // 로그인 성공 시 이동할 URL
                        .failureUrl("/login?error=true") // 로그인 실패 시 이동할 URL
                        .usernameParameter("username") // 로그인 폼에서 사용자 ID 필드의 이름
                        .passwordParameter("password") // 로그인 폼에서 비밀번호 필드의 이름
                )
                .logout(logout -> logout
                        .logoutUrl("/logout") // 로그아웃 처리 URL
                        .logoutSuccessUrl("/login?logout=true") // 로그아웃 성공 시 이동할 URL
                        .invalidateHttpSession(true) // HTTP 세션 무효화
                        .deleteCookies("JSESSIONID") // 쿠키 삭제
                );
        return http.build();
    }

    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder(); // 비밀번호 암호화를 위한 BCryptPasswordEncoder 사용
    }
}
</file>

<file path="src/main/java/edu/yonsei/hello_james/service/CustomUserDetailsService.java">
package edu.yonsei.hello_james.service;


import edu.yonsei.hello_james.entity.User;
import edu.yonsei.hello_james.repository.UserRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;


import java.util.Collections;
import java.util.stream.Collectors;

@Service
@RequiredArgsConstructor
public class CustomUserDetailsService implements UserDetailsService {

    private final UserRepository userRepository;

    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
        User user = userRepository.findByName(username)
                .orElseThrow(() -> new UsernameNotFoundException("User not found with username: " + username));

        // User 엔티티의 역할을 Spring Security의 GrantedAuthority로 변환
        return new org.springframework.security.core.userdetails.User(
                user.getName(),
                user.getPassword(),
                user.getRoles().stream()
                        .map(role -> new SimpleGrantedAuthority(role))
                        .collect(Collectors.toSet())
        );
    }
}
</file>

<file path="src/main/java/edu/yonsei/hello_james/service/FacilityService.java">
package edu.yonsei.hello_james.service;

import edu.yonsei.hello_james.Dto.FacilityDto;
import edu.yonsei.hello_james.entity.Facility;
import edu.yonsei.hello_james.repository.FacilityRepository;
import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.io.IOException;
import java.util.List;
import java.util.Optional;

@Service
@Transactional
@RequiredArgsConstructor
public class FacilityService {


    private final FacilityRepository FacilityRepository;
    private final ImageService ImageService;
    private final ImageService imageService;
    private final FacilityRepository facilityRepository;

    public Facility saveFacility(FacilityDto facilityDto) {
        Facility facility = facilityDto.toFacility();

        // 이미지 파일이 있는 경우 저장하고 경로 설정
        if (facilityDto.getImageFile() != null && !facilityDto.getImageFile().isEmpty()) {
            try {
                String imagePath = imageService.saveImageFile(facilityDto.getImageFile());
                facility.setImagePath(imagePath);
            } catch (IOException e) {
                throw new RuntimeException("이미지 파일 저장 중 오류가 발생했습니다.", e);
            }
        }

        return FacilityRepository.save(facility);
    }

    public Optional<Facility> findFacilityById (Long Id) {
        return FacilityRepository.findById(Id);
    }

    public Optional<Facility> findFacilityByName (String name) {
        return FacilityRepository.findByName(name);
    }

    public List<Facility> findFacilityAll() {
        return FacilityRepository.findAll();
    }

    public void deleteFacilityById(Long Id) {

        FacilityRepository.deleteById(Id);

    }

    public Facility updateFacility(FacilityDto FacilityDto,Long Id) {
        Facility Facility = FacilityRepository.findById(Id).
                orElseThrow(()->new IllegalArgumentException("Facility not found"+Id));
        Facility.updateFacility(FacilityDto);

        return Facility;
    }



}
</file>

<file path="src/main/java/edu/yonsei/hello_james/service/ImageService.java">
package edu.yonsei.hello_james.service;

import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value; // 이 줄을 추가합니다.
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.UUID;

@Service
@Transactional
@Slf4j
@RequiredArgsConstructor
public class ImageService {

    // @Value 어노테이션을 사용하여 application.properties/yml의 값을 주입받습니다.
    @Value("${app.upload-dir:src/main/resources/static/uploads}")
    private String uploadDir;

    // 파일 저장 메서드
    public String saveImageFile(MultipartFile file) throws IOException {
        // 업로드 디렉토리 생성
        Path uploadPath = Paths.get(uploadDir);
        log.info("Upload path: " + uploadPath.toAbsolutePath());
        if (!Files.exists(uploadPath)) {
            Files.createDirectories(uploadPath);
        }

        // 파일명 생성 (UUID + 원본 확장자)
        String originalFilename = file.getOriginalFilename();
        String extension = "";
        if (originalFilename != null && originalFilename.contains(".")) {
            extension = originalFilename.substring(originalFilename.lastIndexOf("."));
        } else {
            extension = ".jpg"; // 기본 확장자 설정 (원본 파일에 확장자가 없는 경우)
        }
        String newFilename = UUID.randomUUID().toString() + extension;

        // 파일 저장
        Path filePath = uploadPath.resolve(newFilename);
        Files.copy(file.getInputStream(), filePath);

        // DB에는 /uploads/filename.png 형식으로 저장
        return "/uploads/" + newFilename;
    }
}
</file>

<file path="src/main/java/edu/yonsei/hello_james/service/InternalService.java">
package edu.yonsei.hello_james.service;

import edu.yonsei.hello_james.Dto.FacilityDto;
import edu.yonsei.hello_james.Dto.InternalDto;
import edu.yonsei.hello_james.entity.Facility;
import edu.yonsei.hello_james.entity.Internal;
import edu.yonsei.hello_james.repository.InternalRepository;
import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.io.IOException;
import java.util.List;
import java.util.Optional;

@Service
@Transactional
@RequiredArgsConstructor
public class InternalService {

    private final InternalRepository internalRepository;
    private final FacilityService facilityService;
    private final ImageService imageService;

    public Internal saveInternal(String name, InternalDto internalDto) {
        Facility facility = facilityService.findFacilityByName(name).
                orElseThrow(()->new IllegalArgumentException("Facility not found"+name));

        Internal internal = internalDto.toInternal();


        if (internalDto.getImageFile() != null && !internalDto.getImageFile().isEmpty()) {
            try {
                String imagePath = imageService.saveImageFile(internalDto.getImageFile());
                internal.setImagePath(imagePath);
            } catch (IOException e) {
                throw new RuntimeException("이미지 파일 저장 중 오류가 발생했습니다.", e);
            }
        }

        internal.setFacility(facility);
        facility.getInternals().add(internal);


        return internalRepository.save(internal);




    }

    public Optional<Internal> findInternalById (Long Id) {
        return internalRepository.findById(Id);
    }

    public Optional<Internal> findInternalByName (String name) {
        return internalRepository.findByName(name);
    }

    public List<Internal> findInternalAll() {
        return internalRepository.findAll();
    }

    public void deleteInternalById(Long Id) {

        internalRepository.deleteById(Id);

    }

    public Internal updateInternal(InternalDto internalDto,Long Id) {
        Internal internal = internalRepository.findById(Id).
                orElseThrow(()->new IllegalArgumentException("Internal not found"+Id));
        internal.updateInternal(internalDto);

        return internal;
    }


}
</file>

<file path="src/main/java/edu/yonsei/hello_james/service/RouteService.java">
package edu.yonsei.hello_james.service;


import edu.yonsei.hello_james.Dto.RouteDto;
import edu.yonsei.hello_james.entity.Route;
import edu.yonsei.hello_james.repository.RouteRepository;
import edu.yonsei.hello_james.repository.RouteRepository;
import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
@Transactional
@RequiredArgsConstructor
public class RouteService {

    private final RouteRepository RouteRepository;

    public Route saveRoute(RouteDto RouteDto) {
        return RouteRepository.save(RouteDto.toRoute());
    }

    public Optional<Route> findRouteById (Long Id) {
        return RouteRepository.findById(Id);
    }

    public Optional<Route> findRouteByName (String name) {
        return RouteRepository.findByName(name);
    }

    public List<Route> findRouteAll() {
        return RouteRepository.findAll();
    }

    public void deleteRouteById(Long Id) {

        RouteRepository.deleteById(Id);

    }

    public Route updateRoute(RouteDto RouteDto,Long Id) {
        Route Route = RouteRepository.findById(Id).
                orElseThrow(()->new IllegalArgumentException("Route not found"+Id));
        Route.updateRoute(RouteDto);

        return Route;
    }






}
</file>

<file path="src/main/java/edu/yonsei/hello_james/service/RouteStopService.java">
package edu.yonsei.hello_james.service;


import edu.yonsei.hello_james.Dto.RouteDto;
import edu.yonsei.hello_james.Dto.RouteStopDto;
import edu.yonsei.hello_james.Dto.StopDto;
import edu.yonsei.hello_james.entity.Route;
import edu.yonsei.hello_james.entity.RouteStop;
import edu.yonsei.hello_james.entity.Stop;
import edu.yonsei.hello_james.repository.RouteRepository;
import edu.yonsei.hello_james.repository.RouteStopRepository;
import edu.yonsei.hello_james.repository.StopRepository;
import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

@Transactional
@Service
@RequiredArgsConstructor
@Slf4j
public class RouteStopService {

    private final RouteStopRepository routeStopRepository;
    private final StopService stopService;
    private final RouteService routeService;

    public void saveRouteStop(RouteStopDto routeStopDto) {

        RouteDto routeDto = new RouteDto();

        routeDto.setStartTime(routeStopDto.getStartTime());
        routeDto.setDay(routeStopDto.getDay());

        Route route = routeService.saveRoute(routeDto);

        int order = 0 ;


        for (StopDto stopDto : routeStopDto.getStops()) {
            Stop stop =stopService.findStopByName(stopDto.getName())
                    .orElseGet(() -> stopService.saveStop(stopDto));

            RouteStop routeStop = new RouteStop();
            routeStop.setRoute(route);
            routeStop.setStop(stop);
            routeStop.setStopOrder(order++);


            routeStopRepository.save(routeStop);

            route.getRouteStops().add(routeStop);
            stop.getRouteStops().add(routeStop);

        }


    }

    public Optional<RouteStop> findRouteStopById (Long Id) {
        return routeStopRepository.findById(Id);
    }



    public List<RouteStop> findRouteStopAll() {
        return routeStopRepository.findAll();
    }

    public void deleteRouteStopById(Long Id) {

        routeStopRepository.deleteById(Id);

    }


    public List<Route> findRoutesByStartAndEndStops(String startStopName, String endStopName) {
        Stop startStop = stopService.findStopByName(startStopName)
                .orElseThrow(() -> new IllegalArgumentException("Start Stop not found with name: " + startStopName));
        Stop endStop = stopService.findStopByName(endStopName)
                .orElseThrow(() -> new IllegalArgumentException("End Stop not found with name: " + endStopName));

        log.info("Start Stop: " + startStopName);
        log.info("End Stop: " + endStopName);
        // RouteStopRepository에 정의된 JPQL 쿼리를 사용하여 검색
        List<Route> routes = routeStopRepository.findRoutesByStartStopAndEndStop(startStop, endStop);

        return routes;

    }



}
</file>

<file path="src/main/java/edu/yonsei/hello_james/service/StopService.java">
package edu.yonsei.hello_james.service;

import edu.yonsei.hello_james.Dto.StopDto;
import edu.yonsei.hello_james.entity.Stop;
import edu.yonsei.hello_james.repository.StopRepository;
import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
@Transactional
@RequiredArgsConstructor
public class StopService {

    private final StopRepository stopRepository;
    private final ImageService imageService;

    public Stop saveStop(StopDto stopDto) {

        Stop stop = stopDto.toStop();


        return stopRepository.save(stop);

    }

    public Optional<Stop> findStopById (Long Id) {
        return stopRepository.findById(Id);
    }

    public Optional<Stop> findStopByName (String name) {
        return stopRepository.findByName(name);
    }

    public List<Stop> findStopAll() {
        return stopRepository.findAll();
    }

    public void deleteStopById(Long Id) {

        stopRepository.deleteById(Id);

    }

    public Stop updateStop(StopDto StopDto,Long Id) {
        Stop stop = stopRepository.findById(Id).
                orElseThrow(()->new IllegalArgumentException("Stop not found"+Id));
        stop.updateStop(StopDto);

        return stop;
    }


}
</file>

<file path="src/main/java/edu/yonsei/hello_james/service/UserService.java">
package edu.yonsei.hello_james.service;

import edu.yonsei.hello_james.Dto.UserDto;
import edu.yonsei.hello_james.Dto.UserDto;
import edu.yonsei.hello_james.entity.User;
import edu.yonsei.hello_james.entity.User;
import edu.yonsei.hello_james.repository.UserRepository;
import edu.yonsei.hello_james.repository.UserRepository;
import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;
@Transactional
@RequiredArgsConstructor
@Service
public class UserService {

    private final UserRepository userRepository;
    private final PasswordEncoder passwordEncoder;


    public User registerNewUser(String username, String rawPassword) {
        if (userRepository.findByName(username).isPresent()) {
            throw new RuntimeException("Username already exists");
        }
        User newUser = new User();
        newUser.setName(username);
        newUser.setPassword(passwordEncoder.encode(rawPassword)); // 비밀번호 암호화
        newUser.addRole("ROLE_USER"); // 기본 역할 부여
        return userRepository.save(newUser);
    }


    public User saveUser(UserDto UserDto) {
        return userRepository.save(UserDto.toUser());
    }

    public Optional<User> findUserById (Long Id) {
        return userRepository.findById(Id);
    }

    public Optional<User> findUserByName (String name) {
        return userRepository.findByName(name);
    }

    public List<User> findUserAll() {
        return userRepository.findAll();
    }

    public void deleteUserById(Long Id) {

        userRepository.deleteById(Id);

    }

    public User updateUser(UserDto UserDto,Long Id) {
        User User = userRepository.findById(Id).
                orElseThrow(()->new IllegalArgumentException("User not found"+Id));
        User.updateUser(UserDto);

        return User;
    }





}
</file>

<file path="src/main/java/edu/yonsei/hello_james/HelloJamesApplication.java">
package edu.yonsei.hello_james;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;


@SpringBootApplication
public class HelloJamesApplication {

	public static void main(String[] args) {
		SpringApplication.run(HelloJamesApplication.class, args);
		System.out.println("good");
	}

}
</file>

<file path="src/main/java/edu/yonsei/hello_james/WebConfig.java">
package edu.yonsei.hello_james;
//
//
//import org.springframework.context.annotation.Configuration;
//import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
//import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
//
//@Configuration
//public class WebConfig implements WebMvcConfigurer {
//
//    @Override
//    public void addResourceHandlers(ResourceHandlerRegistry registry) {
//        registry.addResourceHandler("/uploads/**") // 요청 경로
//                .addResourceLocations("classpath:/static/uploads/"); // 실제 파일 경로
//    }
//}

import org.springframework.context.annotation.Configuration;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;

@Configuration
public class WebConfig implements WebMvcConfigurer {
    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry) {
        registry.addResourceHandler("/uploads/**")
                .addResourceLocations("file:src/main/resources/static/uploads/");
    }
}
</file>

<file path="src/main/resources/static/common/basestyle.css">
:root {
    --primary: #0047A0;
    --primary-dark: #003366;
    --primary-light: #4A8FE7;
    --secondary: #005BAC;
    --accent: #FF9500;
    --background: #F7F9FC;
    --text-primary: #333333;
    --text-secondary: #666666;
    --border-color: #E2E8F0;
    --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.05);
    --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    --shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.1);
    --radius-sm: 4px;
    --radius: 8px;
    --radius-lg: 16px;
    --space-xs: 0.25rem;
    --space-sm: 0.5rem;
    --space-md: 1rem;
    --space-lg: 1.5rem;
    --space-xl: 2rem;
    --font-sans: 'Noto Sans KR', -apple-system, BlinkMacSystemFont, sans-serif;
    --transition: all 0.3s ease;
    --focus-ring: 0 0 0 3px rgba(74, 143, 231, 0.4);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    font-size: 16px;
    height: 100%;
}

body {
    font-family: var(--font-sans);
    line-height: 1.5;
    color: var(--text-primary);
    background-color: var(--background);
    min-height: 100vh;
    display: flex;
    flex-direction: column;
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
}

.navbar {
    background-color: var(--primary-dark);
    color: white;
    padding: var(--space-sm) 0;
    box-shadow: var(--shadow);
    position: sticky;
    top: 0;
    z-index: 100;
}

.nav-container {
    max-width: 1200px;
    margin: 0 auto;
    display: flex;
    justify-content: center;
    gap: var(--space-md);
    padding: 0 var(--space-md);
}

.navbar a {
    display: inline-block;
    background-color: var(--secondary);
    color: white;
    text-decoration: none;
    padding: var(--space-sm) var(--space-lg);
    border-radius: 30px;
    font-weight: 500;
    font-size: 0.95rem;
    cursor: pointer;
    transition: var(--transition);
    text-align: center;
    min-width: 110px;
}

.navbar a:focus {
    outline: none;
}

.navbar a:active {
    transform: translateY(0);
}

.navbar a.active {
    background-color: var(--primary);
    font-weight: 700;
}

.app-footer {
    background-color: var(--primary-dark);
    color: rgba(255, 255, 255, 0.8);
    text-align: center;
    padding: var(--space-md);
    font-size: 0.85rem;
    margin-top: auto;
}

.app-footer a {
    color: white;
    text-decoration: none;
}

@media (max-width: 768px) {
    .nav-container {
        flex-wrap: wrap;
    }

    .navbar a {
        min-width: 90px;
        font-size: 0.9rem;
    }
}

@media (max-width: 480px) {
}

:focus {
    outline: none;
}

:focus-visible {
    box-shadow: var(--focus-ring);
    outline: none;
}

.container {
    margin: 0 auto;
    padding: var(--space-lg);
    background-color: white;
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    margin-top: var(--space-lg);
    margin-bottom: var(--space-lg);
}
</file>

<file path="src/main/resources/static/common/navbar.js">
//
// const navHTML = `
//     <nav class="navbar" aria-label="주 메뉴">
//         <div class="nav-container">
//             <a href="/" id="main-menu" >메인 메뉴</a>
//             <a href="/transportation" id="shuttle" >셔틀</a>
//             <a href="/facility" id="facilities" >편의 시설</a>
//             <a href="/restaurant" id="restaurant" >맛집</a>
//             <a href="/login" id="login" style="background: lightseagreen">로그인</a>
//         </div>
//     </nav>
//     `;
//
// const navPlaceholder = document.getElementById('nav-placeholder');
// if (navPlaceholder) {
//     navPlaceholder.innerHTML = navHTML;
// }



const navPlaceholder = document.getElementById('nav-placeholder');

function loadNav() {
    fetch('/api/auth/status')
        .then(response => response.json())
        .then(data => {
            navPlaceholder.innerHTML = `
    <nav class="navbar" aria-label="주 메뉴">
        <div class="nav-container">
            <a href="/" id="main-menu">메인 페이지</a>
            <a href="/transportation" id="shuttle">셔틀</a>
            <a href="/facility" id="facilities">편의 시설</a>
            <a href="/restaurant" id="restaurant">맛집</a>
            ${data.authenticated ?
                '<a href="/logout" id="logout" style="background: lightseagreen">로그아웃</a>' :
                '<a href="/login" id="login" style="background: lightseagreen">로그인</a>'}
        </div>
    </nav>
            `;
        })
        .catch(err => console.error('Failed to load nav:', err));
}

if (navPlaceholder) loadNav();
if (navPlaceholder) loadNav();
</file>

<file path="src/main/resources/static/last/facilities/nextstyle.css">
.image-banner img {
  width: 100%;
  height: 500px;
}

.building-title {
  text-align: center;
  padding: 20px 10px;
}

.detail-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  padding: 20px;
}

.facility-detail {
  display: flex;
  gap: 16px;
  border: 1px dashed var(--border-color);
  padding: 10px;
  width: 90%;
  max-width: 700px;
  background: white;
}

.facility-detail img {
  width: 150px;
  height: auto;
  border-radius: 8px;
}

.description {
  flex-grow: 1;
  font-size: 14px;
}

.button {
  display: inline-block;
  margin-top: 10px;
  padding: 6px 12px;
  background-color: var(--primary-dark);
  color: white;
  text-decoration: none;
  border-radius: var(--radius-sm);
}

.building-desc {
  font-size: 16px;
  color: var(--text-primary);
  margin-top: 10px;
}
</file>

<file path="src/main/resources/static/last/facility.js">
// // 필터링 기능
// document.addEventListener('DOMContentLoaded', function() {
//   const filterButtons = document.querySelectorAll('.filter-btn');
//   const facilityCards = document.querySelectorAll('.facility-card');
//
//   filterButtons.forEach(button => {
//     button.addEventListener('click', function() {
//       filterButtons.forEach(btn => btn.classList.remove('active'));
//       this.classList.add('active');
//
//       const filterValue = this.getAttribute('data-filter');
//
//       facilityCards.forEach(card => {
//         if (filterValue === 'all' || card.getAttribute('data-category').includes(filterValue)) {
//           card.style.display = 'flex';
//         } else {
//           card.style.display = 'none';
//         }
//       });
//     });
//   });
//
//
// });


// 필터링 및 검색 기능
document.addEventListener('DOMContentLoaded', function() {
  const filterButtons = document.querySelectorAll('.filter-btn');
  const cards         = document.querySelectorAll('.facility-card');
  const searchInput   = document.getElementById('facility-search');
  const searchBtn     = document.getElementById('search-btn');
  const noResults     = document.querySelector('.no-results-message');
  const container     = document.querySelector('.facility-container');

  let selectedCategory = 'all';
  let searchQuery      = '';

  function updateDisplay() {
    let visibleCount = 0;

    cards.forEach(card => {
      const name     = card.querySelector('h3').textContent.toLowerCase();
      const category = card.dataset.category;

      const matchCategory = (selectedCategory === 'all' || category.includes(selectedCategory));
      const matchSearch   = (!searchQuery || name.includes(searchQuery));

      if (matchCategory && matchSearch) {
        card.style.display = 'flex';
        visibleCount++;
      } else {
        card.style.display = 'none';
      }
    });

    if (visibleCount === 0) {
      container.style.display = 'none';
      noResults.style.display = 'flex';
    } else {
      noResults.style.display = 'none';
      container.style.display = 'grid';
    }
  }

  //카테고리 필터
  filterButtons.forEach(btn => {
    btn.addEventListener('click', function() {
      filterButtons.forEach(b => b.classList.remove('active'));
      this.classList.add('active');
      selectedCategory = this.dataset.filter;
      updateDisplay();
    });
  });

  //검색 기능
  searchBtn.addEventListener('click', () => {
    searchQuery = searchInput.value.trim().toLowerCase();
    updateDisplay();
  });
});
</file>

<file path="src/main/resources/static/last/facilitystyle.css">
/* 페이지 헤더 */
.page-header {
  background-color: white;
  padding: 2rem;
  text-align: center;
  box-shadow: var(--shadow-sm);
  margin-bottom: 2rem;
}

.page-header h1 {
  color: var(--primary-dark);
  margin: 0 0 0.5rem;
  font-size: 2.2rem;
}

.page-header p {
  color: var(--text-secondary);
  margin: 0 0 1.5rem;
  font-size: 1.1rem;
}

/* 필터 */
.facility-filters {
  display: flex;
  justify-content: center;
  gap: 10px;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
}

.filter-btn {
  background-color: #f0f0f0;
  border: none;
  padding: 8px 16px;
  border-radius: 20px;
  cursor: pointer;
  font-weight: 500;
  color: var(--text-secondary);
}

.filter-btn.active {
  background-color: var(--secondary);
  color: white;
}

/* 검색창 */
.search-box {
  display: flex;
  justify-content: center;
  margin-bottom: 1rem;
  max-width: 500px;
  margin: 0 auto;
}

.search-box input {
  flex: 1;
  padding: 10px 15px;
  border: 1px solid var(--border-color);
  border-radius: 4px 0 0 4px;
  font-size: 16px;
}

.search-box button {
  background-color: var(--secondary);
  color: white;
  border: none;
  padding: 0 20px;
  border-radius: 0 4px 4px 0;
  cursor: pointer;
}

/* 시설 카드 컨테이너 */
.facility-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
  display: grid;
  width: 100%;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 25px;
}

/* 시설 카드 */
.facility-card {
  background-color: white;
  border-radius: 10px;
  overflow: hidden;
  box-shadow: var(--shadow);
  display: flex;
  flex-direction: column;
}

.facility-image {
  position: relative;
  height: 200px;
  overflow: hidden;
}

.facility-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.facility-badge {
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: rgba(0, 51, 102, 0.8);
  color: white;
  padding: 5px 10px;
  border-radius: 20px;
  font-size: 12px;
  font-weight: 500;
}

.facility-info {
  padding: 20px;
  flex: 1;
  display: flex;
  flex-direction: column;
}

.facility-info h3 {
  margin: 0 0 10px;
  color: var(--primary-dark);
  font-size: 1.3rem;
}

.facility-description {
  color: var(--text-secondary);
  margin: 0 0 15px;
  font-size: 0.95rem;
  flex: 1;
}

.facility-details {
  display: block;
  justify-content: space-between;
  margin-bottom: 15px;
  color: var(--text-secondary);
  font-size: 0.9rem;
}

.view-details-btn {
  display: inline-block;
  background-color: var(--secondary);
  color: white;
  text-decoration: none;
  padding: 8px 15px;
  border-radius: 4px;
  text-align: center;
  font-weight: 500;
  font-size: 0.9rem;
}

.no-results-message {
  text-align: center;
  padding: 3rem 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  color: #777;
}

.no-results-message i {
  font-size: 3rem;
  margin-bottom: 1rem;
  color: #ccc;
}

.reset-search-btn {
  background-color: var(--secondary);
  color: white;
  border: none;
  padding: 8px 16px;
  border-radius: 4px;
  cursor: pointer;
  margin-top: 1rem;
  font-weight: 500;
}

/* 푸터 */
.facility-footer {
  background-color: var(--primary-dark);
  color: white;
  text-align: center;
  padding: 1.5rem;
  margin-top: 3rem;
}

/* 반응형 - 시설 페이지 특화 스타일만 유지 */
@media (max-width: 1024px) {
  .facility-container {
    grid-template-columns: repeat(3, 1fr);
    padding: 0 15px;
    gap: 20px;
  }
}

@media (max-width: 900px) {
  .facility-container {
    grid-template-columns: repeat(2, 1fr);
    padding: 0 15px;
    gap: 20px;
  }
}

@media (max-width: 768px) {
  .facility-container {
    grid-template-columns: repeat(2, 1fr);
    padding: 0 15px;
    gap: 15px;
  }

  .page-header {
    padding: 1.5rem 1rem;
  }

  .page-header h1 {
    font-size: 1.8rem;
  }

  .facility-details {
    flex-direction: column;
    gap: 5px;
  }

  .facility-filters {
    gap: 8px;
  }

  .filter-btn {
    padding: 6px 12px;
    font-size: 0.9rem;
  }
}

@media (max-width: 600px) {
  .facility-container {
    grid-template-columns: 1fr;
    gap: 15px;
  }
}

@media (max-width: 480px) {
  .facility-container {
    padding: 0 10px;
  }

  .page-header h1 {
    font-size: 1.5rem;
  }

  .facility-image {
    height: 180px;
  }

  .facility-info {
    padding: 15px;
  }
}
</file>

<file path="src/main/resources/static/last/main.js">
// document.addEventListener('DOMContentLoaded', function() {
//     const slides = document.querySelector('.slides');
//     const images = document.querySelectorAll('.slides img');
//     const dots = document.querySelectorAll('.dot');
//     const prevBtn = document.getElementById('prevBtn');
//     const nextBtn = document.getElementById('nextBtn');
//     let currentIndex = 0;
//
//     const slideWidth = document.querySelector('.slider').offsetWidth;
//
//     images.forEach(img => {
//         img.style.width = '100%';
//         img.style.objectFit = 'cover';
//     });
//
//     updateSlidePosition();
//
//     // 이전 버튼 클릭
//     prevBtn.addEventListener('click', function() {
//         currentIndex--;
//         if (currentIndex < 0) currentIndex = images.length - 1;
//         updateSlidePosition();
//     });
//
//     // 다음 버튼 클릭
//     nextBtn.addEventListener('click', function() {
//         currentIndex++;
//         if (currentIndex >= images.length) currentIndex = 0;
//         updateSlidePosition();
//     });
//
//     // 인디케이터 클릭
//     dots.forEach(dot => {
//         dot.addEventListener('click', function() {
//             currentIndex = parseInt(this.getAttribute('data-index'));
//             updateSlidePosition();
//         });
//     });
//
//     // 터치 슬라이드 기능
//     let touchStartX = 0;
//     let touchEndX = 0;
//
//     slides.addEventListener('touchstart', function(e) {
//         touchStartX = e.changedTouches[0].screenX;
//     });
//
//     slides.addEventListener('touchend', function(e) {
//         touchEndX = e.changedTouches[0].screenX;
//         handleSwipe();
//     });
//
//     function handleSwipe() {
//         if (touchEndX < touchStartX - 50) {
//             currentIndex++;
//             if (currentIndex >= images.length) currentIndex = 0;
//         }
//         if (touchEndX > touchStartX + 50) {
//             currentIndex--;
//             if (currentIndex < 0) currentIndex = images.length - 1;
//         }
//         updateSlidePosition();
//     }
//
//     function updateSlidePosition() {
//         slides.style.transform = `translateX(${-slideWidth * currentIndex}px)`;
//         dots.forEach(dot => dot.classList.remove('active'));
//         dots[currentIndex].classList.add('active');
//     }
// });

document.addEventListener('DOMContentLoaded', function() {
    // ========== 메인페이지 이미지 슬라이더 ==========
    const slides = document.querySelector('.slides'); // 슬라이드 컨테이너
    const images = document.querySelectorAll('.slides img'); // 모든 슬라이드 이미지
    const dots = document.querySelectorAll('.dot'); // 하단 인디케이터 점들
    const prevBtn = document.getElementById('prevBtn'); // 이전 버튼
    const nextBtn = document.getElementById('nextBtn'); // 다음 버튼
    let currentIndex = 0; // 현재 보여지는 이미지 번호

    // 슬라이더 너비: updateSlidePosition에서 동적으로 계산하도록 변경

    // 모든 슬라이드 이미지 크기 맞춤
    images.forEach(img => {
        img.style.width = '100%';
        img.style.objectFit = 'cover';
    });

    updateSlidePosition(); // 첫 화면 설정      // 이전 버튼 클릭 시 이전 이미지로 이동
    prevBtn.addEventListener('click', function() {
        currentIndex--;
        if (currentIndex < 0) currentIndex = images.length - 1; // 첫 번째에서 마지막으로
        updateSlidePosition();
    });

    // 다음 버튼 클릭 시 다음 이미지로 이동
    nextBtn.addEventListener('click', function() {
        currentIndex++;
        if (currentIndex >= images.length) currentIndex = 0; // 마지막에서 첫 번째로
        updateSlidePosition();
    });

    // 하단 인디케이터 점 클릭 시 해당 이미지로 바로 이동
    dots.forEach(dot => {
        dot.addEventListener('click', function() {
            currentIndex = parseInt(this.getAttribute('data-index'));
            updateSlidePosition();
        });
    });

    // ========== 슬라이드 위치 변경 및 활성 점 표시 ==========
    function updateSlidePosition() {
        const slideWidth = document.querySelector('.slider').offsetWidth; // 현재 슬라이더 너비
        slides.style.transform = `translateX(${-slideWidth * currentIndex}px)`; // 슬라이드 이동
        dots.forEach(dot => dot.classList.remove('active')); // 모든 점 비활성화
        dots[currentIndex].classList.add('active'); // 현재 점만 활성화
    }
    // 창 크기 변경 시 슬라이드 위치 재조정
    window.addEventListener('resize', updateSlidePosition);
    // 터치 이벤트를 위한 변수
    let touchStartX = 0;
    let touchEndX = 0;
    slides.addEventListener('touchstart', function(e) {
        touchStartX = e.changedTouches[0].screenX;
    });
    slides.addEventListener('touchend', function(e) {
        touchEndX = e.changedTouches[0].screenX;
        handleGesture();
    });
    function handleGesture() {
        if (touchEndX < touchStartX - 50) {
            nextBtn.click();
        }
        if (touchEndX > touchStartX + 50) {
            prevBtn.click();
        }
    }

    // 자동 슬라이드 5초 마다
    setInterval(() => {
        nextBtn.click();
    }, 5000);
    // ========== 월별 일정표 기능 ==========
    const scheduleContainer = document.querySelector('.schedule');
    if (scheduleContainer) {
        initSchedule(); // 일정표 시작
    }

    function initSchedule() {
        // 실제 시스템 날짜 받아와서 해당 월 표시
        const currentDate = new Date();
        let currentYear = currentDate.getFullYear(); // 현재 연도
        let currentMonth = currentDate.getMonth();   // 현재 월 (0=1월, 11=12월)

        // HTML 요소들 가져오기
        const prevMonthBtn = document.getElementById('prevMonth'); // 이전 달 버튼
        const nextMonthBtn = document.getElementById('nextMonth'); // 다음 달 버튼
        const currentMonthDisplay = document.getElementById('currentMonth'); // 월 표시 영역
        const scheduleList = document.getElementById('scheduleList'); // 일정 목록 영역
        // 샘플 일정 데이터 (나중에 서버 API로 교체 가능)
        const scheduleData = {
            '2025-2': [
                { date: 3, day: '월', content: '휴학 접수 시작' },
                { date: 12, day: '수', content: '12 (수) ~ 18 (화) 2025-1학기 수강신청' },
                { date: 21, day: '금', content: '21 (금) ~ 27 (목) 2025-1학기 등록' },
                { date: 23, day: '일', content: '졸업예배' },
                { date: 24, day: '월', content: '복학 접수 마감, 학위수여식' }
            ],
            '2025-3': [
                { date: 1, day: '토', content: '삼일절' },
                { date: 3, day: '월', content: '대체휴일' },
                { date: 4, day: '화', content: '개강' },
                { date: 6, day: '목', content: '6 (목) ~ 10 (월) 수강신청 확인 및 변경' },
                { date: 6, day: '목', content: '교무위원회' },
                { date: 12, day: '수', content: '12 (수) ~ 14 (금) 2025-1학기 추가등록' },
                { date: 17, day: '월', content: '미등록자 일반휴학 접수 마감' },
                { date: 17, day: '월', content: '17 (월) ~ 21 (금) 조기졸업 신청' }
            ],
            '2025-4': [
                { date: 3, day: '목', content: '교무위원회' },
                { date: 9, day: '수', content: '학기 1/3선' },
                { date: 14, day: '월', content: '14 (월) ~ 19 (토) 고난주간' },
                { date: 15, day: '화', content: '15 (화) ~ 17 (목) 수강철회' },
                { date: 20, day: '일', content: '부활절' },
                { date: 22, day: '화', content: '22 (화) ~ 28 (월) 중간시험' },
                { date: 28, day: '월', content: '28 (월) ~ 02 (금) 2025-2학기 캠퍼스내 소속변경 신청' },
                { date: 29, day: '화', content: '29 (화) ~ 01 (목) S/U평가 신청' }
            ],
            '2025-5': [
                { date: 29, day: '화', content: '29 (화) ~ 01 (목) S/U평가 신청' },
                { date: 1, day: '목', content: '근로자의날, 교무위원회' },
                { date: 28, day: '월', content: '28 (월) ~ 02 (금) 2025-2학기 캠퍼스내 소속변경 신청' },
                { date: 5, day: '월', content: '부처님 오신 날, 어린이날' },
                { date: 6, day: '화', content: '대체휴일' },
                { date: 7, day: '수', content: '은퇴교수의 날' },
                { date: 10, day: '토', content: '창립기념일' },
                { date: 16, day: '금', content: '학기 2/3선, 일반휴학 접수 마감' },
                { date: 19, day: '월', content: '질병휴학 접수시작' }
            ],
            '2025-6': [
                { date: 3, day: '화', content: '질병휴학 접수마감' },
                { date: 5, day: '목', content: '교무위원회' },
                { date: 6, day: '금', content: '현충일' },
                { date: 8, day: '일', content: '성령강림절' },
                { date: 10, day: '화', content: '10 (화) ~ 16 (월) 자율학습 및 보충수업 기간' },
                { date: 17, day: '화', content: '17 (화) ~ 23 (월) 학기말시험' },
                { date: 24, day: '화', content: '여름방학 시작' },
                { date: 24, day: '화', content: '24 (화) ~ 30 (월) 2025-2학기 캠퍼스내 복수전공 · 연계전공 · 융합심화전공 신청' },
                { date: 30, day: '월', content: '2025-1학기 성적제출 마감, 여름계절제 수업시작' }
            ],
            '2025-7': [
                { date: 14, day: '월', content: '복학 접수 시작' },
                { date: 21, day: '월', content: '여름계절제 수업종료' }
            ],
            '2025-8': [
                { date: 1, day: '금', content: '휴학 접수 시작' },
                { date: 11, day: '월', content: '11 (월) ~ 18 (월) 2025-2학기 수강신청' },
                { date: 15, day: '금', content: '광복절' },
                { date: 22, day: '금', content: '22 (금) ~ 28 (목) 2025-2학기 등록' },
                { date: 25, day: '월', content: '복학 접수 마감' },
                { date: 29, day: '금', content: '학위수여식' }
            ],
            '2025-9': [
                { date: 1, day: '월', content: '개강' },
                { date: 3, day: '수', content: '03 (수) ~ 05 (금) 수강신청 확인 및 변경' },
                { date: 4, day: '목', content: '교무위원회' },
                { date: 9, day: '화', content: '09 (화) ~ 11 (목) 2025-2학기 추가등록' },
                { date: 15, day: '월', content: '미등록자 일반휴학 접수 마감' },
                { date: 15, day: '월', content: '15 (월) ~ 19 (금) 조기졸업 신청' }
            ],
            '2025-10': [
                { date: 2, day: '목', content: '교무위원회' },
                { date: 3, day: '금', content: '개천절' },
                { date: 5, day: '일', content: '05 (일) ~ 07 (화) 추석연휴' },
                { date: 8, day: '수', content: '학기 1/3선, 대체휴일' },
                { date: 9, day: '목', content: '한글날' },
                { date: 13, day: '월', content: '13 (월) ~ 15 (수) 수강철회' },
                { date: 20, day: '월', content: '20 (월) ~ 25 (토) 중간시험' },
                { date: 27, day: '월', content: '27 (월) ~ 29 (수) S/U평가 신청' },
                { date: 27, day: '월', content: '27 (월) ~ 31 (금) 2026-1학기 캠퍼스내 소속변경 신청' }
            ],
            '2025-11': [
                { date: 6, day: '목', content: '교무위원회' },
                { date: 13, day: '목', content: '학기 2/3선, 일반휴학 접수 마감' },
                { date: 14, day: '금', content: '질병휴학 접수시작' },
                { date: 16, day: '일', content: '추수감사절' },
                { date: 24, day: '월', content: '24 (월) ~ 28 (금) 캠퍼스간 소속변경' }
            ],
            '2025-12': [
                { date: 1, day: '월', content: '질병휴학 접수마감' },
                { date: 4, day: '목', content: '교무위원회, 성탄절예배' },
                { date: 8, day: '월', content: '08 (월) ~ 13 (토) 자율학습 및 보충수업 기간' },
                { date: 15, day: '월', content: '15 (월) ~ 20 (토) 학기말 시험' },
                { date: 22, day: '월', content: '겨울방학시작' },
                { date: 22, day: '월', content: '22 (월) ~ 29 (월) 2026-1학기 캠퍼스내 복수전공 · 연계전공 · 융합심화전공 신청' },
                { date: 25, day: '목', content: '성탄절' },
                { date: 28, day: '일', content: '성적제출 마감' },
                { date: 29, day: '월', content: '겨울계절제 수업 시작' }
            ],
            '2026-1': [
                { date: 1, day: '목', content: '신정' },
                { date: 12, day: '월', content: '복학 접수 시작' },
                { date: 20, day: '화', content: '겨울계절제 수업 종료' }
            ],
            '2026-2': [
                { date: 2, day: '월', content: '휴학 접수 시작' },
                { date: 9, day: '월', content: '09 (월) ~ 13 (금) 2026-1학기 수강신청' },
                { date: 16, day: '월', content: '16 (월) ~ 18 (수) 설연휴' },
                { date: 22, day: '일', content: '졸업예배' },
                { date: 23, day: '월', content: '학위수여식, 복학 접수 마감' }
            ]
        };
        // 선택된 월의 일정을 화면에 표시
        function updateScheduleDisplay() {
            const monthKey = `${currentYear}-${currentMonth + 1}`; // "2025-5" 형태로 만들기
            const monthNames = ['1월', '2월', '3월', '4월', '5월', '6월',
                '7월', '8월', '9월', '10월', '11월', '12월'];

            // 상단에 "2025년 5월" 형태로 표시
            currentMonthDisplay.textContent = `${currentYear}년 ${monthNames[currentMonth]}`;

            // 해당 월의 일정 가져오기
            const schedules = scheduleData[monthKey] || [];
            // 일정이 있으면 목록으로 표시, 없으면 안내 메시지
            if (schedules.length === 0) {
                scheduleList.innerHTML = '<div class="schedule-empty"><i class="far fa-calendar-times" style="font-size: 24px; margin-bottom: 8px; display: block;"></i>이번 달 일정이 없습니다.</div>';
            } else {scheduleList.innerHTML = schedules.map(schedule => `
                    <div class="schedule-item">
                        <div class="schedule-date">${schedule.date}일</div>
                        <div class="schedule-day">(${schedule.day})</div>
                        <div class="schedule-content">
                            <i class="fas fa-calendar-day" style="margin-right: 8px; color: var(--primary-light);"></i>
                            ${schedule.content}
                        </div>
                    </div>
                `).join('');
            }
        }
        // 이전 달 버튼 클릭
        prevMonthBtn.addEventListener('click', function() {
            currentMonth--;
            if (currentMonth < 0) {
                currentMonth = 11; // 12월로
                currentYear--;
            }
            updateScheduleDisplay();
        });

        // 다음 달 버튼 클릭
        nextMonthBtn.addEventListener('click', function() {
            currentMonth++;
            if (currentMonth > 11) {
                currentMonth = 0; // 1월로
                currentYear++;
            }
            updateScheduleDisplay();
        });

        // 일정표 영역 우클릭 시 이전 달로 이동
        scheduleContainer.addEventListener('contextmenu', function(e) {
            e.preventDefault(); // 기본 우클릭 메뉴 방지
            currentMonth--;
            if (currentMonth < 0) {
                currentMonth = 11;
                currentYear--;
            }
            updateScheduleDisplay();
        });

        // 일정표 영역 좌클릭 시 다음 달로 이동 (버튼 제외)
        scheduleContainer.addEventListener('click', function(e) {
            // 화살표 버튼 클릭이 아닌 경우에만 실행
            if (!e.target.classList.contains('month-nav')) {
                currentMonth++;
                if (currentMonth > 11) {
                    currentMonth = 0;
                    currentYear++;
                }
                updateScheduleDisplay();
            }
        });

        // 전체 일정 버튼 기능
        const allScheduleBtn = document.getElementById('allSchedule');
        allScheduleBtn.addEventListener('click', function() {
            // 전체 일정 모달 열기
            const scheduleModal = document.getElementById('schedule-modal');
            const modalList = document.getElementById('modalScheduleList');
            const monthNames = ['1월', '2월', '3월', '4월', '5월', '6월',
                '7월', '8월', '9월', '10월', '11월', '12월'];
            let combinedHTML = '';
            Object.keys(scheduleData).forEach(key => {
                const [year, month] = key.split('-');
                combinedHTML += `<h4>${year}년 ${monthNames[month-1]}</h4>`;
                scheduleData[key].forEach(item => {
                    combinedHTML += `
                    <div class="schedule-item">
                        <div class="schedule-date">${item.date}일</div>
                        <div class="schedule-day">(${item.day})</div>
                        <div class="schedule-content">
                            <i class="fas fa-calendar-day" style="margin-right: 8px; color: var(--primary-light);"></i>
                            ${item.content}
                        </div>
                    </div>`;
                });
            });
            modalList.innerHTML = combinedHTML;
            scheduleModal.classList.remove('hidden');
        });
        // 모달 닫기
        const closeModalBtn = document.querySelector('.close-modal');
        closeModalBtn.addEventListener('click', function() {
            document.getElementById('schedule-modal').classList.add('hidden');
        });

        // 페이지 로드 시 현재 날짜 기준으로 일정 표시
        updateScheduleDisplay();
    }
});
</file>

<file path="src/main/resources/static/last/mainstyle.css">
/* ========== 슬라이더 스타일 ========== */
.slider {
    width: 100%;
    max-width: 480px;
    overflow: hidden;
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-lg);
    position: relative;
    margin: 0 auto;
    background: none;
}

.slides {
    display: flex;
    height: 100%;
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

.slides img {
    flex: 0 0 100%;
    width: 100%;
    height: 100%;
    object-fit: cover;
    user-select: none;
}

.slider-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.9);
    color: var(--primary-dark);
    border: none;
    padding: 12px 16px;
    cursor: pointer;
    z-index: 10;
    border-radius: 50%;
    font-weight: bold;
    font-size: 16px;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.slider-button.prev {
    left: 15px;
}

.slider-button.next {
    right: 15px;
}

.slider-dots {
    position: absolute;
    bottom: 15px;
    left: 0;
    right: 0;
    display: flex;
    justify-content: center;
    gap: 8px;
}

.dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.5);
    cursor: pointer;
    transition: all 0.3s ease;
    backdrop-filter: blur(5px);
}

.dot.active {
    background-color: white;
    transform: scale(1.2);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

/* ========== 로고 ========== */
.logo {
    display: block;
    max-width: 140px;
    width: 100%;
    height: auto;
    margin: 24px auto;
    filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
    transition: transform 0.3s ease;
}

.logo img {
    display: block;
    max-width: 100%;
    height: auto;
    margin: 0 auto;
}

/* ========== 섹션 헤더 공통 스타일 ========== */
.section-header {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 24px;
    padding-bottom: 16px;
    border-bottom: 2px solid var(--border-color);
}

.section-header i {
    font-size: 20px;
    color: var(--primary);
    background: linear-gradient(135deg, var(--primary-light), var(--primary));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.section-header h2,
.section-header h3 {
    margin: 0;
    color: var(--primary-dark);
    font-size: 18px;
    font-weight: 600;
}

/* ========== 링크 및 스케줄 영역 공통 ========== */
.links-section,
.schedule {
    background: white;
    border-radius: var(--radius-lg);
    padding: 28px;
    box-shadow: var(--shadow);
    border: 1px solid var(--border-color);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.links-section::before,
.schedule::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, var(--primary), var(--primary-light));
}


/* ========== 링크 스타일 ========== */
.links-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
    gap: 16px;
    margin-top: 20px;
}

.link-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 20px 16px;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    border-radius: var(--radius);
    text-decoration: none;
    color: var(--text-primary);
    font-size: 13px;
    font-weight: 500;
    box-shadow: var(--shadow-sm);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    border: 1px solid var(--border-color);
    text-align: center;
    gap: 8px;
    min-height: 80px;
    position: relative;
    overflow: hidden;
}

.link-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
    transition: left 0.5s;
}


.link-item i {
    font-size: 20px;
    margin-bottom: 4px;
    transition: transform 0.3s ease;
}



.link-item span {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
}

/* ========== 일정표 스타일 ========== */
.schedule-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    padding: 16px;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    border-radius: var(--radius);
    user-select: none;
}

.schedule-header h3 {
    margin: 0;
    color: var(--primary-dark);
    font-size: 16px;
    font-weight: 600;
    flex: 1;
    text-align: center;
}

.month-nav {
    background: white;
    border: 1px solid var(--border-color);
    font-size: 16px;
    color: var(--primary-dark);
    cursor: pointer;
    padding: 12px;
    border-radius: var(--radius);
    transition: all 0.3s ease;
    min-width: 44px;
    min-height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: var(--shadow-sm);
}

.month-nav:hover {
    background: var(--primary-light);
    color: white;
    transform: scale(1.05);
    box-shadow: var(--shadow);
}

.all-schedule {
    font-size: 13px;
    padding: 10px 16px;
    background: linear-gradient(135deg, var(--primary), var(--primary-light));
    color: white;
    margin-left: 12px;
    border-radius: var(--radius);
    gap: 6px;
    min-width: auto;
    border: none;
}

.all-schedule:hover {
    background: linear-gradient(135deg, var(--primary-dark), var(--primary));
    transform: translateY(-2px);
}

.schedule-list {
    max-height: 280px;
    overflow-y: auto;
    padding-right: 8px;
}

.schedule-list::-webkit-scrollbar {
    width: 6px;
}

.schedule-list::-webkit-scrollbar-track {
    background: var(--border-color);
    border-radius: 3px;
}

.schedule-list::-webkit-scrollbar-thumb {
    background: var(--primary-light);
    border-radius: 3px;
}

.schedule-item {
    display: flex;
    align-items: center;
    background: linear-gradient(135deg, #f8fafc 0%, #ffffff 100%);
    border-radius: var(--radius);
    margin-bottom: 12px;
    padding: 16px;
    box-shadow: var(--shadow-sm);
    border-left: 4px solid var(--primary-light);
    transition: all 0.3s ease;
    position: relative;
}

.schedule-item:hover {
    transform: translateX(4px);
    box-shadow: var(--shadow);
    border-left-color: var(--primary);
}

.schedule-item:last-child {
    margin-bottom: 0;
}

.schedule-date {
    width: 60px;
    font-weight: 600;
    color: var(--primary);
    text-align: center;
    flex-shrink: 0;
    font-size: 14px;
}

.schedule-day {
    width: 30px;
    font-size: 11px;
    color: var(--text-secondary);
    text-align: center;
    flex-shrink: 0;
}

.schedule-content {
    flex: 1;
    padding-left: 16px;
    color: var(--text-primary);
    font-weight: 500;
}

.schedule-empty {
    text-align: center;
    color: var(--text-secondary);
    font-style: italic;
    padding: 40px 20px;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    border-radius: var(--radius);
    border: 2px dashed var(--border-color);
}

/* ========== 메인 컨텐츠 래퍼 ========== */
.main-content {
    padding: 20px;
    max-width: 520px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    gap: 32px;
    background-color: var(--background);
    min-height: calc(100vh - 200px);
}
/* ========== 전체 일정 팝업 스타일 ========== */
.modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 2000;
}
.modal.hidden {
    display: none;
}
.modal-content {
    background: #fff;
    border-radius: var(--radius-lg);
    padding: 24px;
    width: 90%;
    max-width: 600px;
    max-height: 80%;
    overflow-y: auto;
    position: relative;
}
.close-modal {
    position: absolute;
    top: 12px;
    right: 12px;
    font-size: 24px;
    cursor: pointer;
    color: var(--text-primary);
}
.modal-content h3 {
    margin-top: 0;
    margin-bottom: 16px;
    font-size: 20px;
    color: var(--primary-dark);
}
.modal-content h4 {
    margin: 16px 0 8px;
    font-size: 16px;
    color: var(--primary);
}

@media (max-width: 768px) {
    .main-content {
        padding: 16px;
        gap: 24px;
    }

    .slider {
        border-radius: var(--radius);
    }

    .slider-button {
        width: 40px;
        height: 40px;
        font-size: 14px;
    }

    .slider-button.prev {
        left: 12px;
    }

    .slider-button.next {
        right: 12px;
    }

    .logo {
        max-width: min(160px, 45vw);
        margin: 20px auto;
    }

    .links-section,
    .schedule {
        padding: 24px 20px;
    }

    .section-header {
        margin-bottom: 20px;
    }

    .section-header h2,
    .section-header h3 {
        font-size: 16px;
    }

    .links-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: 12px;
    }

    .link-item {
        padding: 16px 12px;
        font-size: 12px;
        min-height: 70px;
    }

    .link-item i {
        font-size: 18px;
    }

    .schedule-header {
        padding: 12px;
        flex-wrap: wrap;
        gap: 8px;
    }

    .schedule-header h3 {
        font-size: 15px;
    }

    .month-nav {
        font-size: 14px;
        padding: 10px;
        min-width: 40px;
        min-height: 40px;
    }

    .all-schedule {
        font-size: 12px;
        padding: 8px 14px;
        margin-left: 0;
        order: 3;
        flex-basis: 100%;
        justify-content: center;
    }

    .schedule-item {
        font-size: 13px;
        padding: 14px;
    }

    .schedule-date {
        width: 55px;
        font-size: 13px;
    }

    .schedule-day {
        width: 25px;
    }

    .schedule-content {
        padding-left: 12px;
        font-size: 13px;
    }

    .circle-container {
        bottom: 20px;
        right: 20px;
    }

    .login-button {
        padding: 10px 16px;
        font-size: 13px;
    }

    .login-button i {
        font-size: 14px;
    }
}

@media (max-width: 480px) {
    .main-content {
        padding: 12px;
    }

    .slider {
        border-radius: var(--radius-sm);
    }

    .links-section,
    .schedule {
        padding: 20px 16px;
    }

    .links-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: 10px;
    }

    .link-item {
        padding: 14px 10px;
        font-size: 11px;
        min-height: 65px;
    }

    .link-item i {
        font-size: 16px;
    }

    .schedule-list {
        max-height: 240px;
    }

    .login-button span {
        display: none;
    }

    .login-button {
        padding: 12px;
        border-radius: 50%;
        width: 48px;
        height: 48px;
    }
}
</file>

<file path="src/main/resources/static/last/restaurant.html">
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>연세 편의 시설</title>
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="last/facilitystyle.css" />
  <link rel="stylesheet" href="common/basestyle.css">
</head>
<body>
<div id="nav-placeholder"></div>

<div class="page-header">
  <h1>맛집 안내</h1>
  <p>연세대학교 주위의 다양한 맛집입니다.</p>

<div class="facility-filters">
    <button class="filter-btn active" data-filter="all">전체보기</button>
    <button class="filter-btn" data-filter="매지리">매지리</button>
    <button class="filter-btn" data-filter="단계동">단계동</button>
    <button class="filter-btn" data-filter="무실동">무실동</button>
  </div>

  <div class="search-box">
    <input type="text" id="facility-search" placeholder="식당으로 검색">
    <button id="search-btn"><i class="fas fa-search"></i></button>
  </div>
</div>

<div class="facility-container">
    <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/카쿠레가.png" alt="1층 휴게실">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>카쿠레가</h3>
      <p class="facility-description">강원 원주시 능라동길 37 1층 102호</p>
      <div class="facility-details">
        <span>[운영 시간] : 11:00 - 20:30<br>[브레이크 타임] : 15:00 - 16:30<br>[라스트 오더] : 20:20<br>[전화번호] : 0507-1318-6578</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/오늘의 초밥.png" alt="오늘의 초밥">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>오늘의 초밥</h3>
      <p class="facility-description">강원도 원주시 무실동 1857-18 (아트박스 건물 2층)</p>
      <div class="facility-details">
        <span>[운영 시간] : 11:30 - 21:00<br>[브레이크 타임] : 15:00 - 17:00<br>[라스트 오더] : 14:00<br>[월요일] : 정기휴무<br>[전화번호] : 0507-1347-2025</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/멘야하코.png" alt="멘야하코">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>멘야하코</h3>
      <p class="facility-description">강원 원주시 능라동길 37 1층 106호</p>
      <div class="facility-details">
        <span>[운영 시간] : 11:30 - 21:00<br>[브레이크 타임] : 15:00 - 17:00<br>[라스트 오더] : 14:40, 20:40<br>[전화번호] :0507-1310-2785</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/미분당.png" alt="미분당">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>미분당</h3>
      <p class="facility-description">강원 원주시 능라동길 25 1층 102호</p>
      <div class="facility-details">
        <span>[운영 시간] : 11:00 - 21:00<br>[브레이크 타임] : 15:00 - 17:00<br>[라스트 오더] : 14:30, 20:30<br>[전화번호] :070-8657-1132</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/삼교리동치미막국수&육개장.png" alt="삼교리동치미막국수&육개장">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>삼교리동치미막국수&육개장</h3>
      <p class="facility-description">강원 원주시 무실동 947-2</p>
      <div class="facility-details">
        <span>[운영 시간] : 10:10 - 20:00<br>[브레이크 타임] : 15:30 - 17:30<br>[라스트 오더] : 19:40<br>[월요일] : 정기휴무<br>[전화번호] :0507-1327-7300</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/글뤽피자.png" alt="글뤽피자">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>글뤽피자 </h3>
      <p class="facility-description">강원 원주시 능라동길 37 103호</p>
      <div class="facility-details">
        <span>[운영 시간] : 11:30 - 24:00<br>[브레이크 타임] : 11:30 - 24:00<br>[라스트 오더] : 23:00<br>[전화번호] :0507-1366-9713</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/태향원 본점.png" alt="태향원 본점">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>태향원 본점</h3>
      <p class="facility-description">강원 원주시 봉바위길 52 무실동 1837-8 1층</p>
      <div class="facility-details">
        <span>[운영 시간] : 11:00 - 22:00<br>[브레이크 타임] : 16:00 - 17:00(화요일, 금요일)<br>[전화번호] :0507-1359-2566</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/원주 뚝배기 짬뽕.png" alt="원주 뚝배기 짬뽕">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>원주 뚝배기 짬뽕</h3>
      <p class="facility-description">강원 원주시 봉바위길 41 1층</p>
      <div class="facility-details">
        <span>[운영 시간] : 11:00 - 21:00<br>[브레이크 타임] : 15:00 - 16:30<br>[라스트 오더] : 20:10<br>[화요일] : 정기휴무<br>[전화번호] :033-744-3214</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="단계동">
        <div class="facility-image">
      <img src="/last/restaurant_images/봉화산설렁탕.png" alt="봉화산설렁탕">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>단계동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>봉화산설렁탕</h3>
      <p class="facility-description">강원 원주시 장미공원길 71-2</p>
      <div class="facility-details">
        <span>[운영 시간] : 00:00 - 24:00<br>[전화번호] :033-731-4987</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="단계동">
        <div class="facility-image">
      <img src="/last/restaurant_images/방가삼대 얼큰한 뼈해장국.png" alt="방가삼대 얼큰한 뼈해장국">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>단계동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>방가삼대 얼큰한 뼈해장국</h3>
      <p class="facility-description">강원 원주시 장미공원길 67-2 1층</p>
      <div class="facility-details">
        <span>[운영 시간] :00:00 - 24:00<br>[브레이크 타임] : 14:50 - 16:30<br>[전화번호] :033-744-4710</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="단계동">
        <div class="facility-image">
      <img src="/last/restaurant_images/핵밥.png" alt="핵밥">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>단계동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>핵밥</h3>
      <p class="facility-description">강원 원주시 북원로 2235-4 1층 105호</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 21:00<br>[라스트 오더] : 20:30</span>
        </div>
    </div>
  </div>

  <div class="facility-card" data-category="단계동">
        <div class="facility-image">
      <img src="/last/restaurant_images/이레담막국수.png" alt="이레담막국수">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>단계동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>이레담막국수</h3>
      <p class="facility-description">강원 원주시 단계동 746-6</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 21:00<br>[브레이크 타임] : 15:00 - 17:00<br>[라스트 오더] : 20:00<br>[전화번호] :0507-1399-3423</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="단계동">
        <div class="facility-image">
      <img src="/last/restaurant_images/편편집.png" alt="편편집">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>단계동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>편편집</h3>
      <p class="facility-description">강원 원주시 원문로100번길 2-59 1층 2호</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 22:00<br>[브레이크 타임] : 15:00 - 17:00<br>[라스트 오더] : 13:50, 20:50<br>[전화번호] :0507-1324-2692</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="단계동">
        <div class="facility-image">
      <img src="/last/restaurant_images/백정.png" alt="백정">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>단계동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>백정</h3>
      <p class="facility-description">강원 원주시 북원로 2235-12</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 24:00<br>[라스트 오더] : 23:00<br>[전화번호] :033-735-6678</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="매지리">
        <div class="facility-image">
      <img src="/last/restaurant_images/보스 부리또.jpg" alt="보스 부리또">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>매지리</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>보스 부리또</h3>
      <p class="facility-description">강원 원주시 흥업면 매남동길 1 1층 101호,102호</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 22:00<br>[전화번호] :0507-1454-5531</span>
      </div>
    </div>
  </div>

   <div class="facility-card" data-category="매지리">
        <div class="facility-image">
      <img src="/last/restaurant_images/그린식당.jpg" alt="그린식당">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>매지리</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>그린식당</h3>
      <p class="facility-description">강원 원주시 흥업면 매지리 1238-4</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 22:00<br>[토, 일] : 정기휴무<br>[전화번호] :033-763-2233</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="매지리">
        <div class="facility-image">
      <img src="/last/restaurant_images/유진손두부.jpg" alt="유진손두부">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>매지리</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>유진손두부</h3>
      <p class="facility-description">강원 원주시 흥업면 매지리 1231-1</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 19:30<br>[일요일] : 정기휴무<br>[전화번호] :033-763-4804</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="매지리">
        <div class="facility-image">
      <img src="/last/restaurant_images/Js22.jpg" alt="Js22">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>매지리</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>제이스22</h3>
      <p class="facility-description">강원 원주시 흥업면 매지리 1231-6</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 21:00<br>[브레이크 타임] : 14:40 - 16:30<br>[라스트 오더] : 20:00<br>[일요일] : 정기휴무<br>[전화번호] :0507-1312-1025</span>
      </div>
    </div>
  </div>

  </div>
  

<footer class="facility-footer">
  <p>© 2025 연세대학교 </p>
</footer>

<script src="common/navbar.js"></script>
<script src="last/facility.js"></script>
</body>
</html>
</file>

<file path="src/main/resources/static/last/transportation.css">
.container {
    max-width: 800px;
    flex: 1;
}

.search-section {
    margin-bottom: var(--space-xl);
}

.route-selection-area {
    display: flex;
    flex-direction: column;
    gap: var(--space-lg);
}

.route-container {
    display: flex;
    background-color: var(--primary-dark);
    border-radius: var(--radius);
    padding: var(--space-lg);
    gap: var(--space-lg);
}

.location-box {
    flex: 1;
    background-color: white;
    border-radius: var(--radius-sm);
    padding: var(--space-md);
    box-shadow: var(--shadow-sm);
}

.location-title {
    display: block;
    text-align: center;
    font-size: 1.1rem;
    font-weight: 700;
    margin-bottom: var(--space-md);
    color: var(--primary-dark);
}

.custom-select-wrapper {
    position: relative;
    user-select: none;
}

.custom-select {
    position: relative;
    cursor: pointer;
}

.select-trigger {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: var(--space-sm) var(--space-md);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-sm);
    background-color: white;
}

.select-arrow {
    transition: transform 0.3s ease;
}

.custom-select.open .select-arrow {
    transform: rotate(180deg);
}

.select-options {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background-color: white;
    box-shadow: var(--shadow);
    border-radius: 0 0 var(--radius-sm) var(--radius-sm);
    max-height: 0;
    overflow: hidden;
    z-index: 10;
    transition: max-height 0.3s ease, opacity 0.3s ease;
    opacity: 0;
    border: 1px solid transparent;
}

.custom-select.open .select-options {
    max-height: 240px;
    overflow-y: auto;
    border-color: var(--border-color);
    opacity: 1;
}

.option {
    padding: var(--space-sm) var(--space-md);
    border-bottom: 1px solid var(--border-color);
}

.option:hover, .option:focus {
    background-color: var(--background);
    outline: none;
}

.option:last-child {
    border-bottom: none;
}

.search-button {
    align-self: center;
    background-color: var(--primary);
    color: white;
    border: none;
    padding: var(--space-md) var(--space-xl);
    border-radius: var(--radius);
    font-weight: 700;
    font-size: 1rem;
    cursor: pointer;
    transition: var(--transition);
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    box-shadow: var(--shadow);
}

.bus-info {
    margin-bottom: var(--space-xl);
}

.bus-info h2 {
    color: var(--primary-dark);
    font-size: 1.25rem;
    margin-bottom: var(--space-md);
    padding-bottom: var(--space-sm);
    border-bottom: 2px solid var(--primary-light);
}

.info-card {
    background-color: white;
    border-radius: var(--radius);
    box-shadow: var(--shadow);
    overflow: hidden;
}

.card-header {
    background-color: var(--primary-light);
    color: white;
    padding: var(--space-sm) var(--space-md);
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    font-weight: 500;
}

.next-departure {
    padding: var(--space-md);
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.route-name {
    font-weight: 700;
    color: var(--text-primary);
}

.remaining {
    font-size: 0.85rem;
    color: var(--text-secondary);
}

.notice-section {
    background-color: #FFF9F0;
    border-radius: var(--radius);
    padding: var(--space-lg);
    border-left: 4px solid var(--accent);
}

.notice-title {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    color: var(--primary-dark);
    margin-bottom: var(--space-md);
    font-size: 1.1rem;
}

.notice-title i {
    color: var(--accent);
}

.notice-content {
    color: var(--text-secondary);
    font-size: 0.95rem;
    display: flex;
    flex-direction: column;
    gap: var(--space-md);
}

.notice-content p {
    display: flex;
    align-items: flex-start;
    gap: var(--space-sm);
    line-height: 1.6;
}

.notice-content i {
    color: var(--accent);
    font-size: 0.9rem;
    margin-top: 0.25rem;
}
@media (max-width: 768px) {
    .route-container {
        flex-direction: column;
    }
}

@media (max-width: 480px) {
    .container {
        padding: var(--space-md);
        margin-top: var(--space-md);
    }
    
    .route-container {
        padding: var(--space-md);
    }
    
    .notice-section {
        padding: var(--space-md);
    }
    
    .next-departure {
        flex-direction: column;
        align-items: flex-start;
        gap: var(--space-sm);
    }
}
</file>

<file path="src/main/resources/static/last/transportation.js">
document.addEventListener('DOMContentLoaded', function() {
    setupCustomSelects();

});

function setupCustomSelects() {
    const customSelects = document.querySelectorAll('.custom-select');
    
    customSelects.forEach(select => {
        const trigger = select.querySelector('.select-trigger');
        const options = select.querySelectorAll('.option');
        const selectedText = select.querySelector('.selected-option');
        
        trigger.addEventListener('click', () => {
            customSelects.forEach(otherSelect => {
                if (otherSelect !== select) {
                    otherSelect.classList.remove('open');
                    const otherTrigger = otherSelect.querySelector('.select-trigger');
                    otherTrigger.setAttribute('aria-expanded', 'false');
                }
            });
            
            select.classList.toggle('open');
            const isExpanded = select.classList.contains('open');
            trigger.setAttribute('aria-expanded', isExpanded);
            
            if (isExpanded) {
                const firstOption = options[0];
                if (firstOption) firstOption.focus();
            }
        });
        
        options.forEach(option => {
            option.addEventListener('click', () => {
                selectedText.textContent = option.textContent;
                select.classList.remove('open');
                trigger.setAttribute('aria-expanded', 'false');
                trigger.focus();
                
                options.forEach(opt => {
                    opt.setAttribute('aria-selected', 'false');
                });
                option.setAttribute('aria-selected', 'true');
            });
                        
        });
    });
    
    document.addEventListener('click', (e) => {
        const target = e.target;
        const isSelect = target.closest('.custom-select');
        
        if (!isSelect) {
            customSelects.forEach(select => {
                select.classList.remove('open');
                const trigger = select.querySelector('.select-trigger');
                trigger.setAttribute('aria-expanded', 'false');
            });
        }
    });
}
</file>

<file path="src/main/resources/static/login-page/style.css">
body {
    margin: 0;
    padding: 0;
    font-family: '맑은 고딕', 'Malgun Gothic', sans-serif;
    background: #ffffff;
}

.login-container {
    width: 320px;
    margin: 40px auto;
    border: 2px solid #005BAC;
    border-radius: 10px;
    box-shadow: 0px 0px 10px rgba(0,0,0,0.1);
    text-align: center;
}

.header {
    background-color: #005BAC;
    color: white;
    font-size: 16px;
    padding: 10px 0;
    font-weight: bold;
    border-top-left-radius: 8px;
    border-top-right-radius: 8px;
}

.logo {
    width: 150px;            
    height: auto;
    margin: 20px auto;
    display: block;
    
}

form {
    display: flex;
    flex-direction: column;
    padding: 0 20px 20px 20px;
}

input[type="text"],
input[type="password"] {
    margin: 10px 0;
    padding: 10px;
    font-size: 14px;
    border: 1px solid #999;
    border-radius: 4px;
    box-shadow: inset 0 1px 2px rgba(0,0,0,0.1);
}

.options {
    display: flex;
    justify-content: space-between;
    font-size: 12px;
    margin: 10px 0;
}

button {
    padding: 10px;
    background-color: #005BAC;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    cursor: pointer;
    margin-top: 10px;
}

button:hover {
    background-color: #004080;
}
</file>

<file path="src/main/resources/templates/!DOCTYPE.html">
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>로그인 페이지</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <div class="login-container">
        <div class="header">
            로그인 페이지
        </div>
        <img src="yonsei_logo_white_bg.png" alt="연세 로고" class="logo">
        <form>
            <input type="text" placeholder="학번" required>
            <input type="password" placeholder="비밀번호" required>
            <div class="options">
                <label><input type="checkbox"> 아이디 저장</label>
                <label><input type="checkbox"> 비밀번호 저장</label>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>
</file>

<file path="src/main/resources/templates/admin.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
    <meta charset="UTF-8">
    <title>Admin Page</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
<div class="max-w-7xl mx-auto space-y-10">

    <div th:fragment="section(title, items, moreUrl, type)">
        <div class="bg-white rounded-xl shadow p-6">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-xl font-bold" th:text="${title}">섹션 제목</h2>
                <a th:href="${moreUrl}" class="text-blue-600 hover:underline text-sm">더보기 →</a>
            </div>

            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                <div th:each="item, iterStat : ${items}" th:if="${iterStat.index} < 4"
                     class="border rounded-lg p-4 bg-gray-50 shadow-sm">

                    <div th:if="${type == 'facility'}">
                        <p class="font-semibold">ID: <span th:text="${item.id}">1</span></p>
                        <p th:text="${item.name}">시설명</p>
                        <p class="text-sm text-gray-500" th:text="${item.category}">시설 타입</p>
                    </div>

                    <div th:if="${type == 'stop'}">
                        <p class="font-semibold" th:text="${item.name}">정류장 이름</p>
                        <p class="text-sm text-gray-600">ID: <span th:text="${item.id}">1</span></p>
                        <p class="text-sm text-gray-500" th:text="${item.explanation}">설명</p>
                    </div>

                    <div th:if="${type == 'route'}">
                        <p class="font-semibold" th:text="${item.name}">노선명</p>
                        <p class="text-sm text-gray-600">ID: <span th:text="${item.id}">1</span></p>
                        <p class="text-sm text-gray-500" th:text="${item.busNumber}">버스 번호</p>
                    </div>

                    <div th:if="${type == 'routeStop'}">
                        <p class="font-semibold">노선정류장</p>
                        <p class="text-sm text-gray-600" th:text="'Route: ' + ${item.route.name}"></p>
                        <p class="text-sm text-gray-600" th:text="'Stop: ' + ${item.stop.name}"></p>
                        <p class="text-sm text-gray-500" th:text="'순서: ' + ${item.stopOrder}"></p>
                    </div>

                    <div th:if="${type == 'internal'}">
                        <p class="font-semibold" th:text="${item.name}">Name</p>
                        <p class="text-sm text-gray-600" th:text="${item.explanation}">Explanation</p>
                    </div>

                    <div th:if="${type == 'user'}">
                        <p class="font-semibold" th:text="${item.name}">사용자</p>
                        <p class="text-sm text-gray-600" th:text="'역할: ' + ${item.roles}"></p>
                        <p class="text-sm text-gray-500" th:text="${item.email}">이메일</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div th:replace="~{::section('시설 목록', ${facilities}, '/ad/facilities', 'facility')}"></div>
    <div th:replace="~{::section('정류장 목록', ${stops}, '/ad/stops', 'stop')}"></div>
    <div th:replace="~{::section('노선 목록', ${routes}, '/ad/routes', 'route')}"></div>
    <div th:replace="~{::section('노선-정류장 목록', ${routeStops}, '/ad/routeStops', 'routeStop')}"></div>
    <div th:replace="~{::section('사용자 목록', ${users}, '/ad/users', 'user')}"></div>
</div>
</body>
</html>
</file>

<file path="src/main/resources/templates/adminfacilities.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
    <meta charset="UTF-8">
    <title>시설 목록</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
<div class="max-w-7xl mx-auto space-y-8">
    <h1 class="text-3xl font-bold text-gray-800 mb-6">시설 목록</h1>
    <a href="/ad/facilities/new" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg shadow-md">신규 등록</a>
    <div class="bg-white rounded-xl shadow p-6">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">이름</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">주소</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">운영</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">설명</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">카테고리</th>
                    <th scope="col" class="relative px-6 py-3"><span class="sr-only">Actions</span></th>
                </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                <tr th:each="facility : ${facilities}" class="cursor-pointer hover:bg-gray-50"
                    th:data-facility-name="${facility.name}" onclick="goToFacilityDetail(this)">
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900" th:text="${facility.id}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${facility.name}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${facility.address}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${facility.operation}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${facility.explanation}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${facility.category}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <a th:href="@{/ad/facilities/edit/{id}(id=${facility.id})}" class="text-indigo-600 hover:text-indigo-900 mr-4" onclick="event.stopPropagation();">수정</a>
                        <a th:href="@{/ad/facilities/delete/{id}(id=${facility.id})}" class="text-red-600 hover:text-red-900" onclick="event.stopPropagation();">삭제</a>
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    function goToFacilityDetail(rowElement) {
        const facilityName = rowElement.dataset.facilityName;
        window.location.href = `/ad/facilities/${facilityName}`;
    }
</script>
</body>
</html>
</file>

<file path="src/main/resources/templates/adminimages.html">
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>

</body>
</html>
</file>

<file path="src/main/resources/templates/admininternals.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
    <meta charset="UTF-8">
    <title>내부시설</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
<div class="max-w-7xl mx-auto space-y-8">
    <h1 class="text-3xl font-bold text-gray-800 mb-6">내부시설</h1>
    <a th:href="@{'/ad/facilities/' + ${name} + '/internals/new'}"  class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg shadow-md">신규 등록</a>
    <div class="bg-white rounded-xl shadow p-6">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">이름</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">주소</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">운영</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">설명</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">이미지 URL</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">관련 시설</th>
                    <th scope="col" class="relative px-6 py-3"><span class="sr-only">Actions</span></th>
                </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                <tr th:each="internal : ${internals}">
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900" th:text="${internal.id}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${internal.name}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${internal.address}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${internal.operation}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${internal.explanation}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${internal.imagePath}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${internal.facility != null ? internal.facility.name : 'N/A'}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <a href="#" class="text-indigo-600 hover:text-indigo-900 mr-4">수정</a>
                        <a href="#" class="text-red-600 hover:text-red-900">삭제</a>
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
</body>
</html>
</file>

<file path="src/main/resources/templates/adminroutes.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
    <meta charset="UTF-8">
    <title>노선 목록</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
<div class="max-w-7xl mx-auto space-y-8">
    <h1 class="text-3xl font-bold text-gray-800 mb-6">노선 목록</h1>
    <a href="/ad/routes/new" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg shadow-md">신규 등록</a>
    <div class="bg-white rounded-xl shadow p-6">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">이름</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">시작 시간</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">요일</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">설명</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">버스 번호</th>
                    <th scope="col" class="relative px-6 py-3"><span class="sr-only">Actions</span></th>
                </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                <tr th:each="route : ${routes}">
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900" th:text="${route.id}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${route.name}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${route.startTime}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${route.day}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${route.explanation}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${route.busNumber}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <a href="#" class="text-indigo-600 hover:text-indigo-900 mr-4">수정</a>
                        <a href="#" class="text-red-600 hover:text-red-900">삭제</a>
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
</body>
</html>
</file>

<file path="src/main/resources/templates/adminrouteStops.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
    <meta charset="UTF-8">
    <title>노선-정류장 목록</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
<div class="max-w-7xl mx-auto space-y-8">
    <h1 class="text-3xl font-bold text-gray-800 mb-6">노선-정류장 목록</h1>
    <a href="/routeStops/new/new" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg shadow-md">신규 등록</a>
    <div class="bg-white rounded-xl shadow p-6">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">정류장 순서</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">예정 도착 시간</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">노선 이름</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">정류장 이름</th>
                    <th scope="col" class="relative px-6 py-3"><span class="sr-only">Actions</span></th>
                </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                <tr th:each="routeStop : ${routeStops}">
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900" th:text="${routeStop.id}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${routeStop.stopOrder}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${routeStop.arrivalTime}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${routeStop.route.name}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${routeStop.stop.name}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <a href="#" class="text-indigo-600 hover:text-indigo-900 mr-4">수정</a>
                        <a href="#" class="text-red-600 hover:text-red-900">삭제</a>
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
</body>
</html>
</file>

<file path="src/main/resources/templates/adminstops.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
    <meta charset="UTF-8">
    <title>정류장 목록</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
<div class="max-w-7xl mx-auto space-y-8">
    <h1 class="text-3xl font-bold text-gray-800 mb-6">정류장 목록</h1>
    <a href="/stops/new" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg shadow-md">신규 등록</a>
    <div class="bg-white rounded-xl shadow p-6">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">이름</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">설명</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">이미지 URL</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">위치</th>
                    <th scope="col" class="relative px-6 py-3"><span class="sr-only">Actions</span></th>
                </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                <tr th:each="stop : ${stops}">
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900" th:text="${stop.id}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${stop.name}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${stop.explanation}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${stop.imagePath}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${stop.location}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <a href="#" class="text-indigo-600 hover:text-indigo-900 mr-4">수정</a>
                        <a href="#" class="text-red-600 hover:text-red-900">삭제</a>
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
</body>
</html>
</file>

<file path="src/main/resources/templates/adminusers.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
    <meta charset="UTF-8">
    <title>사용자 목록</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
<div class="max-w-7xl mx-auto space-y-8">
    <h1 class="text-3xl font-bold text-gray-800 mb-6">사용자 목록</h1>
    <a href="/users/new" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-lg shadow-md">신규 등록</a>
    <div class="bg-white rounded-xl shadow p-6">
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">이름</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">이메일</th>
                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">역할</th>
                    <th scope="col" class="relative px-6 py-3"><span class="sr-only">Actions</span></th>
                </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                <tr th:each="user : ${users}">
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900" th:text="${user.id}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${user.name}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${user.email}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900" th:text="${user.roles}"></td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <a href="#" class="text-indigo-600 hover:text-indigo-900 mr-4">수정</a>
                        <a href="#" class="text-red-600 hover:text-red-900">삭제</a>
                    </td>
                </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
</body>
</html>
</file>

<file path="src/main/resources/templates/facility.html">
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>연세 편의 시설</title>
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="last/facilitystyle.css" />
  <link rel="stylesheet" href="common/basestyle.css">
</head>
<body>
<div id="nav-placeholder"></div>

<div class="page-header">
  <h1>편의시설 안내</h1>
  <p>연세대학교의 다양한 시설을 확인하세요</p>

  <div class="facility-filters">
    <button class="filter-btn active" data-filter="all">전체보기</button>
    <button class="filter-btn" data-filter="학습">학습시설</button>
    <button class="filter-btn" data-filter="식당">식당/카페</button>
    <button class="filter-btn" data-filter="편의">편의시설</button>
  </div>

  <div class="search-box">
    <input type="text" id="facility-search" placeholder="시설명으로 검색">
    <button id="search-btn"><i class="fas fa-search"></i></button>
  </div>
</div>

<div class="facility-container">
  <div class="facility-card"
       th:each="facility : ${facilities}"
       th:attr="data-category=${facility.category}">

    <div class="facility-image">
      <img th:src="${facility.imagePath}" th:alt="${facility.name}" />
      <div class="facility-badge">
        <i class="fas"
           th:classappend="' ' + (${facility.category == '학습'} ? 'fa-book' : (${facility.category == '식당' ? 'fa-utensils' : 'fa-building'}))">
        </i>
        <span th:text="${facility.category} + '시설'"></span>
      </div>
    </div>

    <div class="facility-info">
      <h3 th:text="${facility.name}">시설명</h3>
      <p class="facility-description" th:text="${facility.explanation}">시설 설명</p>

      <div class="facility-details">
        <span><i class="fas fa-clock"></i> <span th:text="${facility.operation}">--:--</span></span>
        <span><i class="fas fa-map-marker-alt"></i> <span th:text="${facility.address}">--</span></span>
      </div>

      <a th:href="@{'/facilities/' + ${facility.name}}" class="view-details-btn">
        상세보기 <i class="fas fa-arrow-right"></i>
      </a>
    </div>
  </div>
</div>

<div class="no-results-message" style="display: none;">
  <i class="fas fa-search"></i>
  <p>검색 결과가 없습니다.</p>
  <button class="reset-search-btn" style="display: none;">전체 시설 보기</button>
</div>

<footer class="facility-footer">
  <p>© 2025 연세대학교 | 시설 문의: 033-123-4567</p>
</footer>

<script src="common/navbar.js"></script>
<script src="last/facility.js"></script>
</body>
</html>



















<!--<!DOCTYPE html>-->
<!--<html lang="ko">-->
<!--<head>-->
<!--  <meta charset="UTF-8" />-->
<!--  <meta name="viewport" content="width=device-width, initial-scale=1.0" />-->
<!--  <title>연세 편의 시설</title>-->
<!--  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap" rel="stylesheet">-->
<!--  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">-->
<!--  <link rel="stylesheet" href="last/facilitystyle.css" />-->
<!--  <link rel="stylesheet" href="common/basestyle.css">-->
<!--</head>-->
<!--<body>-->
<!--  <div id="nav-placeholder"></div>-->

<!--  <div class="page-header">-->
<!--    <h1>편의시설 안내</h1>-->
<!--    <p>연세대학교의 다양한 시설을 확인하세요</p>-->
<!--      <div class="facility-filters">-->
<!--      <button class="filter-btn active" data-filter="all">전체보기</button>-->
<!--      <button class="filter-btn" data-filter="학습">학습시설</button>-->
<!--      <button class="filter-btn" data-filter="식당">식당/카페</button>-->
<!--      <button class="filter-btn" data-filter="편의">편의시설</button>-->
<!--    </div>-->

<!--    <div class="search-box">-->
<!--      <input type="text" id="facility-search" placeholder="시설명으로 검색">-->
<!--      <button id="search-btn"><i class="fas fa-search"></i></button>-->
<!--    </div>-->
<!--  </div>-->
<!--  <div class="facility-container">    -->
<!--    <div class="facility-card" data-category="편의 식당">      -->
<!--      <div class="facility-image">-->
<!--        <img src="/last/facilities_images/연세플라자.png" alt="연세플라자" />-->
<!--        <div class="facility-badge"><i class="fas fa-utensils"></i> 편의시설, 식당/카페</div>-->
<!--      </div><div class="facility-info">-->
<!--        <h3>연세플라자</h3>-->
<!--        <p class="facility-description">푸드코트, 카페, 편의점 등 다양한 편의시설이 위치한 학생활동 공간</p>        -->
<!--        <div class="facility-details">-->
<!--          <span><i class="fas fa-clock"></i> &#45;&#45;:&#45;&#45;</span>-->
<!--          <span><i class="fas fa-map-marker-alt"></i> &#45;&#45;</span>-->
<!--        </div>-->
<!--        <a href="facilities/plaza" class="view-details-btn">상세보기 <i class="fas fa-arrow-right"></i></a>-->
<!--      </div>-->
<!--    </div>-->

<!--    <div class="facility-card" data-category="편의 식당">      -->
<!--      <div class="facility-image">-->
<!--        <img src="/last/facilities_images/학생회관.png" alt="학생회관" />-->
<!--        <div class="facility-badge"><i class="fas fa-building"></i> 편의시설, 식당/카페</div>-->
<!--      </div>-->
<!--      <div class="facility-info">-->
<!--        <h3>학생회관</h3>-->
<!--        <p class="facility-description">학생회 사무실, 동아리방, 다목적 세미나실이 위치한 학생 중심 공간</p>        -->
<!--        <div class="facility-details">-->
<!--          <span><i class="fas fa-clock"></i> &#45;&#45;:&#45;&#45;</span>-->
<!--          <span><i class="fas fa-map-marker-alt"></i> &#45;&#45;</span>-->
<!--        </div>-->
<!--        <a href="facilities/studentUnion" class="view-details-btn">상세보기 <i class="fas fa-arrow-right"></i></a>-->
<!--      </div>-->
<!--    </div>    -->
<!--    -->
<!--    <div class="facility-card" data-category="학습">      -->
<!--      <div class="facility-image">-->
<!--        <img src="/last/facilities_images/컨버전스.png" alt="컨버전스홀" />-->
<!--        <div class="facility-badge"><i class="fas fa-laptop"></i> 학습시설</div>-->
<!--      </div>-->
<!--      <div class="facility-info">-->
<!--        <h3>컨버전스홀</h3>-->
<!--        <p class="facility-description">최신 IT 설비를 갖춘 강의실과 스터디룸이 있는 복합교육시설</p>        -->
<!--        <div class="facility-details">-->
<!--          <span><i class="fas fa-clock"></i> &#45;&#45;:&#45;&#45;</span>-->
<!--          <span><i class="fas fa-map-marker-alt"></i> &#45;&#45;</span>-->
<!--        </div>-->
<!--        <a href="facilities/convergence" class="view-details-btn">상세보기 <i class="fas fa-arrow-right"></i></a>-->
<!--      </div>-->
<!--    </div>-->
<!--    <div class="facility-card" data-category="학습">      -->
<!--      <div class="facility-image">-->
<!--        <img src="/last/facilities_images/정의관.png" alt="정의관" />-->
<!--        <div class="facility-badge"><i class="fas fa-book"></i> 학습시설</div>-->
<!--      </div>-->
<!--      <div class="facility-info">-->
<!--        <h3>정의관</h3>-->
<!--        <p class="facility-description">강의실과 교수연구실이 있는 인문사회계열 중심 건물</p>        -->
<!--        <div class="facility-details">-->
<!--          <span><i class="fas fa-clock"></i> &#45;&#45;:&#45;&#45;</span>-->
<!--          <span><i class="fas fa-map-marker-alt"></i> &#45;&#45;</span>-->
<!--        </div>-->
<!--        <a href="facilities/jeongui" class="view-details-btn">상세보기 <i class="fas fa-arrow-right"></i></a>-->
<!--      </div>-->
<!--    </div>    -->
<!--    <div class="facility-card" data-category="학습">      -->
<!--      <div class="facility-image">-->
<!--        <img src="/last/facilities_images/청송관.png" alt="청송관" />-->
<!--        <div class="facility-badge"><i class="fas fa-book"></i> 학습시설</div>-->
<!--      </div>-->
<!--      <div class="facility-info">-->
<!--        <h3>청송관</h3>-->
<!--        <p class="facility-description">학생 기숙사로 편의시설과 휴게공간이 완비된 주거시설</p>        -->
<!--        <div class="facility-details">-->
<!--          <span><i class="fas fa-clock"></i> &#45;&#45;:&#45;&#45;</span>-->
<!--          <span><i class="fas fa-map-marker-alt"></i> &#45;&#45;</span>-->
<!--        </div>-->
<!--        <a href="facilities/cheongsong" class="view-details-btn">상세보기 <i class="fas fa-arrow-right"></i></a>-->
<!--      </div>-->
<!--    </div>    -->
<!--    <div class="facility-card" data-category="학습">      -->
<!--      <div class="facility-image">-->
<!--        <img src="/last/facilities_images/창조관.png" alt="창조관" />-->
<!--        <div class="facility-badge"><i class="fas fa-book"></i> 학습시설</div>-->
<!--      </div>-->
<!--      <div class="facility-info">-->
<!--        <h3>창조관</h3>-->
<!--        <p class="facility-description">실험실과 연구공간이 위치한 자연공학계열 중심 건물</p>        -->
<!--        <div class="facility-details">-->
<!--          <span><i class="fas fa-clock"></i> &#45;&#45;:&#45;&#45;</span>-->
<!--          <span><i class="fas fa-map-marker-alt"></i> &#45;&#45;</span>-->
<!--        </div>-->
<!--        <a href="/facilities/changjo" class="view-details-btn">상세보기 <i class="fas fa-arrow-right"></i></a>-->
<!--      </div>-->
<!--    </div>    -->
<!--    <div class="facility-card" data-category="학습">      -->
<!--      <div class="facility-image">-->
<!--        <img src="/last/facilities_images/백운관.png" alt="백운관" />-->
<!--        <div class="facility-badge"><i class="fas fa-book"></i> 학습시설</div>-->
<!--      </div>-->
<!--      <div class="facility-info">-->
<!--        <h3>백운관</h3>-->
<!--        <p class="facility-description">대형 학생식당과 편의시설이 위치한 복합건물</p>        -->
<!--        <div class="facility-details">-->
<!--          <span><i class="fas fa-clock"></i> &#45;&#45;:&#45;&#45;</span>-->
<!--          <span><i class="fas fa-map-marker-alt"></i> &#45;&#45;</span>-->
<!--        </div>-->
<!--        <a href="facilities/baekun" class="view-details-btn">상세보기 <i class="fas fa-arrow-right"></i></a>-->
<!--      </div>-->
<!--    </div>    -->
<!--    <div class="facility-card" data-category="학습">      -->
<!--      <div class="facility-image">-->
<!--        <img src="/last/facilities_images/미래관.png" alt="미래관" />-->
<!--        <div class="facility-badge"><i class="fas fa-laptop"></i> 학습시설</div>-->
<!--      </div>-->
<!--      <div class="facility-info">-->
<!--        <h3>미래관</h3>-->
<!--        <p class="facility-description">첨단 IT 인프라가 구축된 미래형 강의실과 연구공간</p>        -->
<!--        <div class="facility-details">-->
<!--          <span><i class="fas fa-clock"></i> &#45;&#45;:&#45;&#45;</span>-->
<!--          <span><i class="fas fa-map-marker-alt"></i> &#45;&#45;</span>-->
<!--        </div>-->
<!--        <a href="facilities/mirae" class="view-details-btn">상세보기 <i class="fas fa-arrow-right"></i></a>-->
<!--      </div>-->
<!--  </div>-->
<!--  </div>-->

<!--  <div class="no-results-message" style="display: none;">-->
<!--    <i class="fas fa-search"></i>-->
<!--    <p>검색 결과가 없습니다.</p>-->
<!--    <button class="reset-search-btn" style="display: none;">전체 시설 보기</button>-->
<!--  </div>-->
<!--  <footer class="facility-footer">-->
<!--    <p>© 2025 연세대학교 | 시설 문의: 033-123-4567</p>-->
<!--  </footer>-->

<!--  <script src="common/navbar.js"></script>-->
<!--  <script src="last/facility.js"></script>-->
<!--</body>-->
<!--</html>-->
</file>

<file path="src/main/resources/templates/facilityForm.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
  <meta charset="UTF-8">
  <title th:text="${facility != null and facility.id != null ? '시설 수정' : '시설 신규 등록'}">시설 폼</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
<div class="max-w-xl mx-auto bg-white rounded-xl shadow p-8">
  <h1 class="text-2xl font-bold text-gray-800 mb-6" th:text="${facility != null and facility.id != null ? '시설 수정' : '시설 신규 등록'}">시설 폼</h1>

  <form th:action="${facility != null and facility.id != null ? '/ad/facilities/' + facility.id + '/update' : '/ad/facilities'}"
        th:method="post"
        enctype="multipart/form-data" class="space-y-6">

    <input type="hidden" th:if="${facility != null and facility.id != null}" name="id" th:value="${facility.id}">

    <div>
      <label for="name" class="block text-sm font-medium text-gray-700">이름</label>
      <input type="text" id="name" name="name" required
             th:value="${facility != null ? facility.name : ''}"
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="address" class="block text-sm font-medium text-gray-700">주소</label>
      <input type="text" id="address" name="address" required
             th:value="${facility != null ? facility.address : ''}"
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="operation" class="block text-sm font-medium text-gray-700">운영</label>
      <input type="text" id="operation" name="operation"
             th:value="${facility != null ? facility.operation : ''}"
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="explanation" class="block text-sm font-medium text-gray-700">설명</label>
      <textarea id="explanation" name="explanation" rows="3"
                th:text="${facility != null ? facility.explanation : ''}"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"></textarea>
    </div>
    <div>
      <label for="category" class="block text-sm font-medium text-gray-700">카테고리</label>
      <input type="text" id="category" name="category"
             th:value="${facility != null ? facility.category : ''}"
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="imageFile" class="block text-sm font-medium text-gray-700">이미지 파일 (선택 사항)</label>
      <input type="file" id="imageFile" name="imageFile" accept="image/*"
             class="mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100">
      <p th:if="${facility != null and facility.image != null}" class="mt-2 text-sm text-gray-500">
        현재 이미지: <span th:text="${facility.image.fileName}"></span>
      </p>
    </div>

    <div class="flex justify-end space-x-3">
      <a href="/admin/facilities" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">취소</a>
      <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
              th:text="${facility != null and facility.id != null ? '수정' : '등록'}">등록</button>
    </div>
  </form>
</div>
</body>
</html>
</file>

<file path="src/main/resources/templates/facilityInternal.html">
<!DOCTYPE html>
<html lang="ko" xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title th:text="${facility.name} + ' 상세정보'">미래관 상세정보</title>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/last/facilities/nextstyle.css">
    <link rel="stylesheet" href="/last/facilitystyle.css" />
    <link rel="stylesheet" href="/common/basestyle.css">
</head>
<body>
<div id="nav-placeholder"></div>
<!--<div class="image-banner">-->
<!--    <img th:src="${facility.imagePath}" th:alt="${facility.name}" />-->

<!--</div>-->
<div class="page-header">
    <h1>학생회관 편의시설 세부사항 안내</h1>
</div>

<!--<div class="detail-content">-->
<!--    <div class="facility-detail" th:each="internal : ${internals}">-->
<!--        <img th:src="${internal.imagePath}" th:alt="${internal.name}">-->
<!--        <div class="description">-->
<!--            <p><strong>시설명:</strong> <span th:text="${internal.name}"></span></p>-->
<!--            <p><strong>운영 여부:</strong> <span th:text="${internal.operation}"></span></p>-->
<!--            <p><strong>특징:</strong> <span th:text="${internal.explanation}"></span></p>-->
<!--            <p><strong>위치:</strong> <span th:text="${internal.address}"></span></p>-->
<!--        </div>-->
<!--    </div>-->
<!--</div>-->


<div class="facility-container">
    <div class="facility-card" th:each="internal : ${internals}">
        <div class="facility-image">
            <img th:src="${internal.imagePath}" th:alt="${internal.name}">
        </div>
        <div class="facility-info">
            <h3 class="facility-name" th:text="${internal.name}"></h3>
            <p class="facility-operation"><strong>운영 여부:</strong> <span th:text="${internal.operation}"></span></p>
            <p class="facility-explanation"><strong>특징:</strong> <span th:text="${internal.explanation}"></span></p>
            <p class="facility-address"><strong>위치:</strong> <span th:text="${internal.address}"></span></p>
        </div>
    </div>
</div>



<script src="/common/navbar.js"></script>
</body>
</html>
</file>

<file path="src/main/resources/templates/fuck.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
  <meta charset="UTF-8">
  <title>시설 신규 등록</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
<div class="max-w-xl mx-auto bg-white rounded-xl shadow p-8">
  <h1 class="text-2xl font-bold text-gray-800 mb-6">시설 신규 등록</h1>

  <form action="/ad/facilities" method="post" enctype="multipart/form-data" class="space-y-6">
    <div>
      <label for="name" class="block text-sm font-medium text-gray-700">이름</label>
      <input type="text" id="name" name="name" required
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="address" class="block text-sm font-medium text-gray-700">주소</label>
      <input type="text" id="address" name="address" required
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="operation" class="block text-sm font-medium text-gray-700">운영</label>
      <input type="text" id="operation" name="operation"
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="explanation" class="block text-sm font-medium text-gray-700">설명</label>
      <textarea id="explanation" name="explanation" rows="3"
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"></textarea>
    </div>
    <div>
      <label for="category" class="block text-sm font-medium text-gray-700">카테고리</label>
      <input type="text" id="category" name="category"
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="imageFile" class="block text-sm font-medium text-gray-700">이미지 파일</label>
      <input type="file" id="imageFile" name="imageFile" accept="image/*"
             class="mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100">
    </div>

    <div class="flex justify-end space-x-3">
      <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">등록</button>
    </div>
  </form>
</div>
</body>
</html>
</file>

<file path="src/main/resources/templates/imageForm.html">
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>

</body>
</html>
</file>

<file path="src/main/resources/templates/index.html">
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>로그인 페이지</title>
    <link rel="stylesheet" href="login-page/style.css">
</head>
<body>
    <div class="login-container">
        <div class="header">
            로그인 페이지
        </div>
        <img src="login-page/yonsei_logo_white_bg.png" alt="연세 로고" class="logo">
        <form>
            <input type="text" placeholder="학번" required>
            <input type="password" placeholder="비밀번호" required>
            <div class="options">
                <label><input type="checkbox"> 아이디 저장</label>
                <label><input type="checkbox"> 비밀번호 저장</label>
            </div>
            <button type="submit">Login</button>
        </form>
    </div>
</body>
</html>
</file>

<file path="src/main/resources/templates/internalForm.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
    <meta charset="UTF-8">
    <title>내부 데이터 신규 등록</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
<div class="max-w-xl mx-auto bg-white rounded-xl shadow p-8">
    <h1 class="text-2xl font-bold text-gray-800 mb-6">내부 데이터 신규 등록</h1>

    <form th:action="@{|/ad/facilities/${name}/internals|}"   method="post" enctype="multipart/form-data" class="space-y-6">

        <div>
            <label for="name" class="block text-sm font-medium text-gray-700">이름</label>
            <input type="text" id="name" name="name" required
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
        </div>
        <div>
            <label for="address" class="block text-sm font-medium text-gray-700">주소</label>
            <input type="text" id="address" name="address"
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
        </div>
        <div>
            <label for="operation" class="block text-sm font-medium text-gray-700">운영</label>
            <input type="text" id="operation" name="operation"
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
        </div>
        <div>
            <label for="explanation" class="block text-sm font-medium text-gray-700">설명</label>
            <textarea id="explanation" name="explanation" rows="3"
                      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"></textarea>
        </div>
        <div>
            <label for="imageFile" class="block text-sm font-medium text-gray-700">이미지 파일</label>
            <input type="file" id="imageFile" name="imageFile" accept="image/*"
                   class="mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100">
        </div>
<!--        <div>-->
<!--            <label for="facilityId" class="block text-sm font-medium text-gray-700">관련 시설 ID</label>-->
<!--            <input type="number" id="facilityId" name="facilityId"-->
<!--                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">-->
<!--        </div>-->

        <div class="flex justify-end space-x-3">
            <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">등록</button>
        </div>
    </form>
</div>
</body>
</html>
</file>

<file path="src/main/resources/templates/join.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>회원가입</title>


    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/last/mainstyle.css">
    <link rel="stylesheet" href="/common/basestyle.css">

    <style>
        body {
            font-family: 'Noto Sans KR', sans-serif;
            margin: 0;
            padding: 0;
        }

        h1 {
            text-align: center;
            color: #0a3d62;
            margin-top: 40px;
        }

        form {
            width: 90%;
            max-width: 400px;
            margin: 30px auto;
            padding: 30px;
            border-radius: 12px;
            background-color: rgba(240, 248, 255, 0.5);
            box-shadow: 0 4px 20px rgba(0, 68, 119, 0.1);
        }

        label {
            display: block;
            margin-bottom: 6px;
            color: #0a3d62;
            font-weight: 500;
        }

        input[type="text"],
        input[type="password"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #a6c8ff;
            border-radius: 6px;
            box-sizing: border-box;
            font-size: 14px;
        }

        button {
            width: 100%;
            padding: 12px;
            background-color: #1e90ff;
            border: none;
            border-radius: 6px;
            color: white;
            font-weight: bold;
            font-size: 15px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #1565c0;
        }

        p {
            text-align: center;
            margin-top: 15px;
        }

        a {
            color: #1e90ff;
            text-decoration: none;
        }

        a:hover {
            text-decoration: underline;
        }

        /* 📱 반응형 폼 너비 조절 */
        @media (min-width: 600px) {
            form {
                width: 80%;
            }
        }

        @media (min-width: 768px) {
            form {
                width: 60%;
            }
        }

        @media (min-width: 1024px) {
            form {
                width: 40%;
            }
        }

        @media (min-width: 1280px) {
            form {
                width: 30%;
            }
        }
    </style>
</head>
<body>
<div id="nav-placeholder"></div>
<h1>회원가입</h1>


<form th:action="@{/join}" method="post">
    <div>
        <label for="username">사용자 이름:</label>
        <input type="text" id="username" name="username" required/>
    </div>
    <div>
        <label for="password">비밀번호:</label>
        <input type="password" id="password" name="password" required/>
    </div>
    <div>
        <button type="submit">가입하기</button>
    </div>
</form>

<p>이미 계정이 있으신가요? <a th:href="@{/login}">로그인하기</a></p>

<script src="/common/navbar.js"></script>
<script src="/last/main.js"></script>

</body>
</html>
</file>

<file path="src/main/resources/templates/login.html">
<!--<!DOCTYPE html>-->
<!--<html xmlns:th="http://www.thymeleaf.org">-->
<!--<head>-->
<!--    <title>Login</title>-->
<!--    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap" rel="stylesheet">-->
<!--    <link rel="stylesheet" href="/last/mainstyle.css">-->
<!--    <link rel="stylesheet" href="/common/basestyle.css">-->
<!--    <style>-->
<!--        body {-->
<!--            font-family: 'Noto Sans KR', sans-serif;-->
<!--            margin: 0;-->
<!--            padding: 0;-->
<!--        }-->

<!--        h1 {-->
<!--            text-align: center;-->
<!--            color: #0a3d62;-->
<!--            margin-top: 40px;-->
<!--        }-->

<!--        form {-->
<!--            width: 90%;-->
<!--            max-width: 400px;-->
<!--            margin: 30px auto;-->
<!--            padding: 30px;-->
<!--            border-radius: 12px;-->
<!--            background-color: rgba(240, 248, 255, 0.5);-->
<!--            box-shadow: 0 4px 20px rgba(0, 68, 119, 0.1);-->
<!--        }-->

<!--        label {-->
<!--            display: block;-->
<!--            margin-bottom: 6px;-->
<!--            color: #0a3d62;-->
<!--            font-weight: 500;-->
<!--        }-->

<!--        input[type="text"],-->
<!--        input[type="password"] {-->
<!--            width: 100%;-->
<!--            padding: 10px;-->
<!--            margin-bottom: 20px;-->
<!--            border: 1px solid #a6c8ff;-->
<!--            border-radius: 6px;-->
<!--            box-sizing: border-box;-->
<!--            font-size: 14px;-->
<!--        }-->

<!--        button {-->
<!--            width: 100%;-->
<!--            padding: 12px;-->
<!--            background-color: #1e90ff;-->
<!--            border: none;-->
<!--            border-radius: 6px;-->
<!--            color: white;-->
<!--            font-weight: bold;-->
<!--            font-size: 15px;-->
<!--            cursor: pointer;-->
<!--            transition: background-color 0.3s ease;-->
<!--        }-->

<!--        button:hover {-->
<!--            background-color: #1565c0;-->
<!--        }-->

<!--        div[th\\:if] {-->
<!--            text-align: center;-->
<!--            margin-bottom: 15px;-->
<!--            font-weight: bold;-->
<!--        }-->

<!--        p {-->
<!--            text-align: center;-->
<!--            margin-top: 15px;-->
<!--        }-->

<!--        a {-->
<!--            color: #1e90ff;-->
<!--            text-decoration: none;-->
<!--        }-->

<!--        a:hover {-->
<!--            text-decoration: underline;-->
<!--        }-->

<!--        /* 📱 반응형 디자인 */-->
<!--        @media (min-width: 600px) {-->
<!--            form {-->
<!--                width: 80%;-->
<!--            }-->
<!--        }-->

<!--        @media (min-width: 768px) {-->
<!--            form {-->
<!--                width: 60%;-->
<!--            }-->
<!--        }-->

<!--        @media (min-width: 1024px) {-->
<!--            form {-->
<!--                width: 40%;-->
<!--            }-->
<!--        }-->

<!--        @media (min-width: 1280px) {-->
<!--            form {-->
<!--                width: 30%;-->
<!--            }-->
<!--        }-->
<!--    </style>-->
<!--</head>-->
<!--<body>-->

<!--<div id="nav-placeholder"></div>-->

<!--<h1>로그인</h1>-->

<!--<div th:if="${param.error}" style="color:red; margin:auto ; margin-top:0 ; margin-bottom: 0">-->
<!--    유효하지 않는 이름과 비밀번호-->
<!--</div>-->
<!--<div th:if="${param.logout}" style="color:green;">-->
<!--    이미 로그아웃 되었습니다-->
<!--</div>-->

<!--<form th:action="@{/perform_login}" method="post">-->
<!--    <div>-->
<!--        <label for="username">Username:</label>-->
<!--        <input type="text" id="username" name="username"/>-->
<!--    </div>-->
<!--    <div>-->
<!--        <label for="password">Password:</label>-->
<!--        <input type="password" id="password" name="password"/>-->
<!--    </div>-->
<!--    <div>-->
<!--        <button type="submit">Login</button>-->
<!--    </div>-->
<!--</form>-->

<!--<p>계정이 없으신가요? <a th:href="@{/join}">회원가입 하세요</a></p>-->

<!--<script src="/common/navbar.js"></script>-->
<!--<script src="/last/main.js"></script>-->

<!--</body>-->
<!--</html>-->

<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login</title>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"/>
    <link rel="stylesheet" href="/common/basestyle.css">
    <link rel="stylesheet" href="/last/mainstyle.css">
    <style>
        body {
            font-family: 'Noto Sans KR', sans-serif;
            margin: 0;
            padding: 0;
        }

        h1 {
            text-align: center;
            color: #0a3d62;
            margin-top: 40px;
        }

        form {
            width: 90%;
            max-width: 400px;
            margin: 30px auto;
            padding: 30px;
            border-radius: 12px;
            background-color: rgba(240, 248, 255, 0.5);
            box-shadow: 0 4px 20px rgba(0, 68, 119, 0.1);
        }

        label {
            display: block;
            margin-bottom: 6px;
            color: #0a3d62;
            font-weight: 500;
        }

        input[type="text"],
        input[type="password"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #a6c8ff;
            border-radius: 6px;
            box-sizing: border-box;
            font-size: 14px;
        }

        button {
            width: 100%;
            padding: 12px;
            background-color: #1e90ff;
            border: none;
            border-radius: 6px;
            color: white;
            font-weight: bold;
            font-size: 15px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #1565c0;
        }

        p {
            text-align: center;
            margin-top: 15px;
        }

        a {
            color: #1e90ff;
            text-decoration: none;
        }

        a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>

<div id="nav-placeholder"></div>

<h1>로그인</h1>

<div th:if="${param.error}" style="color:red; margin:auto ; margin-top:0 ; margin-bottom: 0">
    유효하지 않는 이름과 비밀번호
</div>
<div th:if="${param.logout}" style="color:green; margin:auto; margin-bottom:30px ;margin-top:30px">
    이미 로그아웃 되었습니다
</div>

<form th:action="@{/perform_login}" method="post">
    <div>
        <label for="username">사용자 이름:</label>
        <input type="text" id="username" name="username"/>
    </div>
    <div>
        <label for="password">비밀번호:</label>
        <input type="password" id="password" name="password"/>
    </div>
    <div>
        <button type="submit">로그인</button>
    </div>
</form>

<p>계정이 없으신가요? <a th:href="@{/join}">회원가입 하세요</a></p>

<script src="/common/navbar.js"></script>

</body>
</html>
</file>

<file path="src/main/resources/templates/mainPage.html">
<!DOCTYPE html>

<html lang="ko">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">    <title>연세 메인 페이지</title>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/last/mainstyle.css">
    <link rel="stylesheet" href="last/facilitystyle.css">
    <link rel="stylesheet" href="/common/basestyle.css">
</head>
<body>
<div id="nav-placeholder"></div>

<main class="main-content">
    <!-- 슬라이더 섹션 -->
    <div class="slider">
        <div class="slides">
            <img src="/last/main_images/image%206.png" alt="slide1">
            <img src="/last/main_images/image%207.png" alt="slide2">
            <img src="/last/main_images/image%208.png" alt="slide3">
            <img src="/last/main_images/image%209.png" alt="slide4">
        </div>

        <button class="slider-button prev" id="prevBtn">‹</button>
        <button class="slider-button next" id="nextBtn">›</button>

        <div class="slider-dots">
            <span class="dot active" data-index="0"></span>
            <span class="dot" data-index="1"></span>
            <span class="dot" data-index="2"></span>
            <span class="dot" data-index="3"></span>
        </div>
    </div>

    <!-- 로고 -->
    <div class="logo">
        <img src="/last/main_images/image%2010.png" alt="로고">
    </div>        <div class="content-grid">
    <!-- 학사 링크 섹션 -->
    <section class="links-section">
        <div class="section-header">
            <i class="fas fa-university"></i>
            <h2>학사 링크</h2>
        </div>
        <div class="links-grid">
            <a href="https://portal.yonsei.ac.kr/" class="link-item">
                <i class="fas fa-home"></i>
                <span>포털</span>
            </a>
            <a href="https://yscec.yonsei.ac.kr/" class="link-item">
                <i class="fas fa-graduation-cap"></i>
                <span>LearnUs</span>
            </a>
            <a href="https://wlib.yonsei.ac.kr/local/html/campusMap" class="link-item">
                <i class="fas fa-book"></i>
                <span>도서관</span>
            </a>
            <a href="https://wjdorm.yonsei.ac.kr/" class="link-item">
                <i class="fas fa-bed"></i>
                <span>생활관</span>
            </a>
            <a href="https://uni.yonsei.ac.kr/fmcs/19" class="link-item">
                <i class="fas fa-user-graduate"></i>
                <span>평생교육원</span>
            </a>
            <a href="https://myjob.yonsei.ac.kr/career/introduction.htm?ch=1" class="link-item">
                <i class="fas fa-briefcase"></i>
                <span>인재개발원</span>
            </a>
            <a href="https://wcounsel.yonsei.ac.kr/wcounsel/intro/location01.do" class="link-item">
                <i class="fas fa-comments"></i>
                <span>상담센터</span>
            </a>
            <a href="https://with.yonsei.ac.kr/" class="link-item">
                <i class="fas fa-hands-helping"></i>
                <span>With-YONSEI</span>
            </a>
            <a href="https://www.yonsei.ac.kr/wj/" class="link-item">
                <i class="fas fa-chalkboard-teacher"></i>
                <span>교육실</span>
            </a>
            <a href="http://www.yonsei.kr/wj/campus/etc10.jsp" class="link-item">
                <i class="fas fa-lightbulb"></i>
                <span>미래융합교육개발원</span>
            </a>
            <a href="https://ycms.yonsei.ac.kr/teacher1/index.do" class="link-item">
                <i class="fas fa-user-tie"></i>
                <span>교직과정</span>
            </a>
            <a href="https://yiec.yonsei.ac.kr" class="link-item">
                <i class="fas fa-globe"></i>
                <span>국제교류원</span>
            </a>
            <a href="https://rc.yonsei.ac.kr/" class="link-item">
                <i class="fas fa-puzzle-piece"></i>
                <span>RC융합대학</span>
            </a>
            <a href="https://wsw.yonsei.ac.kr/wsw/scholarship/campus01.do" class="link-item">
                <i class="fas fa-graduation-cap"></i>
                <span>장학금</span>
            </a>
        </div>
    </section>

    <!-- 일정표 섹션 -->
    <section class="schedule">
        <div class="section-header">
            <i class="fas fa-calendar-alt"></i>
            <h3>학사 일정</h3>
        </div>
        <div class="schedule-header">
            <button id="prevMonth" class="month-nav">
                <i class="fas fa-chevron-left"></i>
            </button>
            <h3 id="currentMonth">2024년 12월</h3>
            <button id="nextMonth" class="month-nav">
                <i class="fas fa-chevron-right"></i>
            </button>
            <button id="allSchedule" class="month-nav all-schedule">
                <i class="fas fa-list"></i>
                <span>전체 일정</span>
            </button>
        </div>
        <div class="schedule-list" id="scheduleList">
            <!-- 일정 목록이 여기에 생성 -->
        </div>
    </section>
</div>

</main>
<footer class="facility-footer">
    <p>© 2025 연세대학교 </p>
</footer>
<!-- 전체 일정 팝업 모달 -->
<div id="schedule-modal" class="modal hidden">
    <div class="modal-content">
        <span class="close-modal">&times;</span>
        <h3>전체 일정</h3>
        <div id="modalScheduleList"></div>
    </div>
</div>

<script src="/common/navbar.js"></script>
<script src="/last/main.js"></script>
</body>
</html>
</file>

<file path="src/main/resources/templates/restaurant.html">
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>연세 편의 시설</title>
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link rel="stylesheet" href="last/facilitystyle.css" />
  <link rel="stylesheet" href="common/basestyle.css">
</head>
<body>
<div id="nav-placeholder"></div>

<div class="page-header">
  <h1>맛집 안내</h1>
  <p>연세대학교 주위의 다양한 맛집입니다.</p>

<div class="facility-filters">
    <button class="filter-btn active" data-filter="all">전체보기</button>
    <button class="filter-btn" data-filter="매지리">매지리</button>
    <button class="filter-btn" data-filter="단계동">단계동</button>
    <button class="filter-btn" data-filter="무실동">무실동</button>
  </div>

  <div class="search-box">
    <input type="text" id="facility-search" placeholder="식당으로 검색">
    <button id="search-btn"><i class="fas fa-search"></i></button>
  </div>
</div>

<div class="facility-container">
    <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/카쿠레가.png" alt="1층 휴게실">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>카쿠레가</h3>
      <p class="facility-description">강원 원주시 능라동길 37 1층 102호</p>
      <div class="facility-details">
        <span>[운영 시간] : 11:00 - 20:30<br>[브레이크 타임] : 15:00 - 16:30<br>[라스트 오더] : 20:20<br>[전화번호] : 0507-1318-6578</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/오늘의 초밥.png" alt="오늘의 초밥">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>오늘의 초밥</h3>
      <p class="facility-description">강원도 원주시 무실동 1857-18 (아트박스 건물 2층)</p>
      <div class="facility-details">
        <span>[운영 시간] : 11:30 - 21:00<br>[브레이크 타임] : 15:00 - 17:00<br>[라스트 오더] : 14:00<br>[월요일] : 정기휴무<br>[전화번호] : 0507-1347-2025</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/멘야하코.png" alt="멘야하코">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>멘야하코</h3>
      <p class="facility-description">강원 원주시 능라동길 37 1층 106호</p>
      <div class="facility-details">
        <span>[운영 시간] : 11:30 - 21:00<br>[브레이크 타임] : 15:00 - 17:00<br>[라스트 오더] : 14:40, 20:40<br>[전화번호] :0507-1310-2785</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/미분당.png" alt="미분당">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>미분당</h3>
      <p class="facility-description">강원 원주시 능라동길 25 1층 102호</p>
      <div class="facility-details">
        <span>[운영 시간] : 11:00 - 21:00<br>[브레이크 타임] : 15:00 - 17:00<br>[라스트 오더] : 14:30, 20:30<br>[전화번호] :070-8657-1132</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/삼교리동치미막국수&육개장.png" alt="삼교리동치미막국수&육개장">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>삼교리동치미막국수&육개장</h3>
      <p class="facility-description">강원 원주시 무실동 947-2</p>
      <div class="facility-details">
        <span>[운영 시간] : 10:10 - 20:00<br>[브레이크 타임] : 15:30 - 17:30<br>[라스트 오더] : 19:40<br>[월요일] : 정기휴무<br>[전화번호] :0507-1327-7300</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/글뤽피자.png" alt="글뤽피자">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>글뤽피자 </h3>
      <p class="facility-description">강원 원주시 능라동길 37 103호</p>
      <div class="facility-details">
        <span>[운영 시간] : 11:30 - 24:00<br>[브레이크 타임] : 11:30 - 24:00<br>[라스트 오더] : 23:00<br>[전화번호] :0507-1366-9713</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/태향원 본점.png" alt="태향원 본점">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>태향원 본점</h3>
      <p class="facility-description">강원 원주시 봉바위길 52 무실동 1837-8 1층</p>
      <div class="facility-details">
        <span>[운영 시간] : 11:00 - 22:00<br>[브레이크 타임] : 16:00 - 17:00(화요일, 금요일)<br>[전화번호] :0507-1359-2566</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="무실동">
        <div class="facility-image">
      <img src="/last/restaurant_images/원주 뚝배기 짬뽕.png" alt="원주 뚝배기 짬뽕">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>무실동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>원주 뚝배기 짬뽕</h3>
      <p class="facility-description">강원 원주시 봉바위길 41 1층</p>
      <div class="facility-details">
        <span>[운영 시간] : 11:00 - 21:00<br>[브레이크 타임] : 15:00 - 16:30<br>[라스트 오더] : 20:10<br>[화요일] : 정기휴무<br>[전화번호] :033-744-3214</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="단계동">
        <div class="facility-image">
      <img src="/last/restaurant_images/봉화산설렁탕.png" alt="봉화산설렁탕">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>단계동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>봉화산설렁탕</h3>
      <p class="facility-description">강원 원주시 장미공원길 71-2</p>
      <div class="facility-details">
        <span>[운영 시간] : 00:00 - 24:00<br>[전화번호] :033-731-4987</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="단계동">
        <div class="facility-image">
      <img src="/last/restaurant_images/방가삼대 얼큰한 뼈해장국.png" alt="방가삼대 얼큰한 뼈해장국">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>단계동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>방가삼대 얼큰한 뼈해장국</h3>
      <p class="facility-description">강원 원주시 장미공원길 67-2 1층</p>
      <div class="facility-details">
        <span>[운영 시간] :00:00 - 24:00<br>[브레이크 타임] : 14:50 - 16:30<br>[전화번호] :033-744-4710</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="단계동">
        <div class="facility-image">
      <img src="/last/restaurant_images/핵밥.png" alt="핵밥">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>단계동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>핵밥</h3>
      <p class="facility-description">강원 원주시 북원로 2235-4 1층 105호</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 21:00<br>[라스트 오더] : 20:30</span>
        </div>
    </div>
  </div>

  <div class="facility-card" data-category="단계동">
        <div class="facility-image">
      <img src="/last/restaurant_images/이레담막국수.png" alt="이레담막국수">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>단계동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>이레담막국수</h3>
      <p class="facility-description">강원 원주시 단계동 746-6</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 21:00<br>[브레이크 타임] : 15:00 - 17:00<br>[라스트 오더] : 20:00<br>[전화번호] :0507-1399-3423</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="단계동">
        <div class="facility-image">
      <img src="/last/restaurant_images/편편집.png" alt="편편집">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>단계동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>편편집</h3>
      <p class="facility-description">강원 원주시 원문로100번길 2-59 1층 2호</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 22:00<br>[브레이크 타임] : 15:00 - 17:00<br>[라스트 오더] : 13:50, 20:50<br>[전화번호] :0507-1324-2692</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="단계동">
        <div class="facility-image">
      <img src="/last/restaurant_images/백정.png" alt="백정">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>단계동</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>백정</h3>
      <p class="facility-description">강원 원주시 북원로 2235-12</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 24:00<br>[라스트 오더] : 23:00<br>[전화번호] :033-735-6678</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="매지리">
        <div class="facility-image">
      <img src="/last/restaurant_images/보스 부리또.jpg" alt="보스 부리또">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>매지리</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>보스 부리또</h3>
      <p class="facility-description">강원 원주시 흥업면 매남동길 1 1층 101호,102호</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 22:00<br>[전화번호] :0507-1454-5531</span>
      </div>
    </div>
  </div>

   <div class="facility-card" data-category="매지리">
        <div class="facility-image">
      <img src="/last/restaurant_images/그린식당.jpg" alt="그린식당">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>매지리</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>그린식당</h3>
      <p class="facility-description">강원 원주시 흥업면 매지리 1238-4</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 22:00<br>[토, 일] : 정기휴무<br>[전화번호] :033-763-2233</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="매지리">
        <div class="facility-image">
      <img src="/last/restaurant_images/유진손두부.jpg" alt="유진손두부">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>매지리</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>유진손두부</h3>
      <p class="facility-description">강원 원주시 흥업면 매지리 1231-1</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 19:30<br>[일요일] : 정기휴무<br>[전화번호] :033-763-4804</span>
      </div>
    </div>
  </div>

  <div class="facility-card" data-category="매지리">
        <div class="facility-image">
      <img src="/last/restaurant_images/Js22.jpg" alt="Js22">
      <div class="facility-badge">
        <i class="fas fa-building"></i>
        <span>매지리</span>
      </div>
    </div>
    <div class="facility-info">
      <h3>제이스22</h3>
      <p class="facility-description">강원 원주시 흥업면 매지리 1231-6</p>
      <div class="facility-details">
        <span>[운영 시간] :11:00 - 21:00<br>[브레이크 타임] : 14:40 - 16:30<br>[라스트 오더] : 20:00<br>[일요일] : 정기휴무<br>[전화번호] :0507-1312-1025</span>
      </div>
    </div>
  </div>

  </div>
  

<footer class="facility-footer">
  <p>© 2025 연세대학교 </p>
</footer>

<script src="common/navbar.js"></script>
<script src="last/facility.js"></script>
</body>
</html>
</file>

<file path="src/main/resources/templates/routeform.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
    <meta charset="UTF-8">
    <title>노선 신규 등록</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
<div class="max-w-xl mx-auto bg-white rounded-xl shadow p-8">
    <h1 class="text-2xl font-bold text-gray-800 mb-6">노선 신규 등록</h1>

    <form action="/admin/routes" method="post" class="space-y-6">
        <div>
            <label for="name" class="block text-sm font-medium text-gray-700">노선명</label>
            <input type="text" id="name" name="name" required
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
        </div>
        <div>
            <label for="startTime" class="block text-sm font-medium text-gray-700">시작 시간</label>
            <input type="time" id="startTime" name="startTime"
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
        </div>
        <div>
            <label for="day" class="block text-sm font-medium text-gray-700">요일</label>
            <input type="text" id="day" name="day"
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
        </div>
        <div>
            <label for="explanation" class="block text-sm font-medium text-gray-700">설명</label>
            <textarea id="explanation" name="explanation" rows="3"
                      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"></textarea>
        </div>
        <div>
            <label for="busNumber" class="block text-sm font-medium text-gray-700">버스 번호</label>
            <input type="number" id="busNumber" name="busNumber"
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
        </div>

        <div class="flex justify-end space-x-3">
            <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">등록</button>
        </div>
    </form>
</div>
</body>
</html>
</file>

<file path="src/main/resources/templates/routeStopForm.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
  <meta charset="UTF-8">
  <title>노선-정류장 신규 등록</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
<div class="max-w-xl mx-auto bg-white rounded-xl shadow p-8">
  <h1 class="text-2xl font-bold text-gray-800 mb-6">노선-정류장 신규 등록</h1>

  <form action="/admin/routeStops" method="post" class="space-y-6">
    <div>
      <label for="stopOrder" class="block text-sm font-medium text-gray-700">정류장 순서</label>
      <input type="number" id="stopOrder" name="stopOrder" required
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="arrivalTime" class="block text-sm font-medium text-gray-700">예정 도착 시간</label>
      <input type="time" id="arrivalTime" name="arrivalTime"
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="routeId" class="block text-sm font-medium text-gray-700">노선 ID</label>
      <input type="number" id="routeId" name="routeId" required
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="stopId" class="block text-sm font-medium text-gray-700">정류장 ID</label>
      <input type="number" id="stopId" name="stopId" required
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>

    <div class="flex justify-end space-x-3">
      <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">등록</button>
    </div>
  </form>
</div>
</body>
</html>
</file>

<file path="src/main/resources/templates/stopForm.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
    <meta charset="UTF-8">
    <title>정류장 신규 등록</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
<div class="max-w-xl mx-auto bg-white rounded-xl shadow p-8">
    <h1 class="text-2xl font-bold text-gray-800 mb-6">정류장 신규 등록</h1>

    <form action="/admin/stops" method="post" enctype="multipart/form-data" class="space-y-6">
        <div>
            <label for="name" class="block text-sm font-medium text-gray-700">이름</label>
            <input type="text" id="name" name="name" required
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
        </div>
        <div>
            <label for="explanation" class="block text-sm font-medium text-gray-700">설명</label>
            <textarea id="explanation" name="explanation" rows="3"
                      class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"></textarea>
        </div>
        <div>
            <label for="location" class="block text-sm font-medium text-gray-700">위치</label>
            <input type="text" id="location" name="location"
                   class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
        </div>
        <div>
            <label for="imageFile" class="block text-sm font-medium text-gray-700">이미지 파일</label>
            <input type="file" id="imageFile" name="imageFile" accept="image/*"
                   class="mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100">
        </div>

        <div class="flex justify-end space-x-3">
            <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">등록</button>
        </div>
    </form>
</div>
</body>
</html>
</file>

<file path="src/main/resources/templates/transportation.html">
<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>연세대학교 셔틀버스 | 교통 정보</title>    
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/common/basestyle.css">
    <link rel="stylesheet" href="/last/transportation.css">
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
</head>
<body>
    <div id="nav-placeholder"></div>
    
    <main class="container">
        <h1 class="sr-only">교통 및 셔틀버스 정보</h1>

        <section class="search-section" aria-labelledby="search-title">
            <h2 id="search-title" class="sr-only">경로 검색</h2>

            <div class="route-selection-area">
                <div class="route-container">
                    <div class="location-box">
                        <label for="departure-dropdown" class="location-title">출발지</label>
                        <div class="custom-select-wrapper">
                            <div class="custom-select" id="departure-dropdown">
                                <div class="select-trigger" aria-haspopup="listbox" aria-expanded="false">
                                    <span class="selected-option">미래캠퍼스</span>
                                    <i class="fas fa-chevron-down select-arrow" aria-hidden="true"></i>
                                </div>
<!--                                <div class="select-options" role="listbox" aria-labelledby="departure-label">-->
<!--                                    <div class="option" role="option" aria-selected="true" tabindex="0">학교</div>-->
<!--                                    <div class="option" role="option" tabindex="0">원주역</div>-->
<!--                                    <div class="option" role="option" tabindex="0">고속버스터미널</div>-->
<!--                                    <div class="option" role="option" tabindex="0">무실동</div>-->
<!--                                    <div class="option" role="option" tabindex="0">단종역</div>-->
<!--                                    <div class="option" role="option" tabindex="0">여주역</div>-->
<!--                                    <div class="option" role="option" tabindex="0">원주세브란스</div>-->
<!--                                    <div class="option" role="option" tabindex="0">접속중앙동등 2번 출구</div>-->
<!--                                    <div class="option" role="option" tabindex="0">일산</div>-->
<!--                                    <div class="option" role="option" tabindex="0">영등포역 5번 출구</div>-->
<!--                                </div>-->
                                <div class="select-options" role="listbox" aria-labelledby="departure-label">
                                    <div th:each="stop, iterStat : ${stops}"
                                         class="option"
                                         role="option"
                                         th:attr="aria-selected=${iterStat.index == 0}, tabindex=0"
                                         th:text="${stop.name}">
                                        정류장 이름
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="location-box">
                        <label for="arrival-dropdown" class="location-title">도착지</label>
                        <div class="custom-select-wrapper">
                            <div class="custom-select" id="arrival-dropdown">
                                <div class="select-trigger" aria-haspopup="listbox" aria-expanded="false">
                                    <span class="selected-option">원주역</span>
                                    <i class="fas fa-chevron-down select-arrow" aria-hidden="true"></i>
                                </div>
<!--                                <div class="select-options" role="listbox" aria-labelledby="arrival-label">-->
<!--                                    <div class="option" role="option" aria-selected="true" tabindex="0">학교</div>-->
<!--                                    <div class="option" role="option" tabindex="0">원주역</div>-->
<!--                                    <div class="option" role="option" tabindex="0">고속버스터미널</div>-->
<!--                                    <div class="option" role="option" tabindex="0">무실동</div>-->
<!--                                    <div class="option" role="option" tabindex="0">단종역</div>-->
<!--                                    <div class="option" role="option" tabindex="0">여주역</div>-->
<!--                                    <div class="option" role="option" tabindex="0">원주세브란스</div>-->
<!--                                    <div class="option" role="option" tabindex="0">접속중앙동등 2번 출구</div>-->
<!--                                    <div class="option" role="option" tabindex="0">일산</div>-->
<!--                                    <div class="option" role="option" tabindex="0">영등포역 5번 출구</div>-->
<!--                                </div>-->
                                <div class="select-options" role="listbox" aria-labelledby="departure-label">
                                    <div th:each="stop, iterStat : ${stops}"
                                         class="option"
                                         role="option"
                                         th:attr="aria-selected=${iterStat.index == 0}, tabindex=0"
                                         th:text="${stop.name}">
                                        정류장 이름
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <button type="button" class="search-button"  id="search-button" aria-label="길찾기 검색">
                    <i class="fas fa-search" aria-hidden="true"></i>
                    <span>검색</span>
                </button>
            </div>
        </section>

        <section class="bus-info">
            <h2>버스 정보</h2>
            <div class="info-card">
                <div class="card-header">
                    <i class="fas fa-bus" aria-hidden="true"></i>
                    <span>다음 출발 버스</span>
                </div>
                <div class="next-departure">
                    <div class="route-name">학교 → 고속버스터미널</div>
                </div>
            </div>
        </section>
        
        <section class="notice-section" aria-labelledby="notice-title">
            <h2 id="notice-title" class="notice-title">
                <i class="fas fa-exclamation-circle" aria-hidden="true"></i>
                <span>주의사항</span>
            </h2>
            <div class="notice-content">
                <p><i class="fas fa-circle-info" aria-hidden="true"></i> 요금 및 중앙상 시간은 변동될 수 있습니다. 수시로 시간 확인 바랍니다.</p>
                
                <p><i class="fas fa-circle-info" aria-hidden="true"></i> 서울버스는 중간 정류장 시간이 유동적이오니 승차장에 미리 대기하여 주시기 바랍니다.</p>
                
                <p><i class="fas fa-circle-info" aria-hidden="true"></i> 비수기에는 부득이한 사정으로 운행이 불가할 수 있습니다.</p>
            </div>
        </section>    </main>

    <footer class="app-footer">
        <p>© 2025 연세대학교</p>
    </footer>

    <script src="/last/transportation.js"></script>
    <script src="/common/navbar.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const searchButton = document.getElementById('search-button');

            searchButton.addEventListener('click', () => {
                const departure = document.querySelector('#departure-dropdown .selected-option')?.textContent.trim();
                const arrival = document.querySelector('#arrival-dropdown .selected-option')?.textContent.trim();
                console.log('hi')
                if (!departure || !arrival) {
                    alert("출발지와 도착지를 모두 선택해주세요.");
                    return;
                }

                const url = `/transportation/search?departure=${encodeURIComponent(departure)}&arrival=${encodeURIComponent(arrival)}`;
                window.location.href = url;
            });
        });
    </script>
</body>
</html>
</file>

<file path="src/main/resources/templates/transportSearchPage.html">
<!DOCTYPE html>
<html lang="ko" xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>연세대학교 셔틀버스 | 교통 정보</title>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;500;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/common/basestyle.css">
    <link rel="stylesheet" href="/last/transportation.css">
    <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
</head>
<body>
<div id="nav-placeholder"></div>

<main class="container">
    <!-- 검색 정보 섹션 -->
    <section class="search-info" th:if="${param.departure != null and param.arrival != null}">
        <h2>검색 결과</h2>
        <div class="search-params">
            <div class="param-item">
                <span class="label">출발지:</span>
                <span class="value" th:text="${param.departure}">출발지</span>
            </div>
            <div class="param-item">
                <span class="label">도착지:</span>
                <span class="value" th:text="${param.arrival}">도착지</span>
            </div>
        </div>
    </section>

    <!-- 검색 결과가 없을 때 -->
    <section class="no-results" th:if="${routes == null or #lists.isEmpty(routes)}">
        <div class="info-card">
            <div class="card-header">
                <i class="fas fa-exclamation-triangle" aria-hidden="true"></i>
                <span>검색 결과 없음</span>
            </div>
            <div class="no-results-content">
                <p>해당 경로로 운행하는 버스가 없습니다.</p>
                <p>다른 출발지와 도착지를 입력해보세요.</p>
            </div>
        </div>
    </section>

    <!-- 검색 결과가 있을 때 -->
    <section class="route-results" th:if="${routes != null and not #lists.isEmpty(routes)}">
        <h2>이용 가능한 노선</h2>

        <div class="route-list">
            <div class="route-card" th:each="route : ${routes}">
                <div class="route-header">
                    <div class="route-name">
                        <i class="fas fa-bus" aria-hidden="true"></i>
                        <span th:text="${route.name}">노선명</span>
                    </div>
                    <div class="route-number" th:if="${route.busNumber != null}"
                         th:text="'버스번호: ' + ${route.busNumber}">버스번호</div>
                    <div class="route-number" th:if="${route.day != null}"
                         th:text="'요일: ' + ${route.day}">요일</div>
                </div>

                <div class="route-details">
                    <div class="route-info">
                        <div class="info-item" th:if="${route.startTime != null}">
                            <span class="label">시작시간:</span>
                            <span class="value" th:text="${route.startTime}">시작시간</span>
                        </div>

                        <div class="info-item" th:if="${route.explanation != null}">
                            <span class="label">설명:</span>
                            <span class="value" th:text="${route.explanation}">설명</span>
                        </div>
                    </div>

                    <!-- 정류장 목록 -->
                    <div class="stops-info" th:if="${route.routeStops != null and not #lists.isEmpty(route.routeStops)}">
                        <h4>경유 정류장</h4>
                        <div class="stops-list">
                            <span class="stop-item"
                                  th:each="routeStop, iterStat : ${route.routeStops}"
                                  th:text="${routeStop.stop.name + (iterStat.last ? '' : ' → ')}">
                                정류장
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- 정류장 상세 정보 (만약 단일 정류장 정보가 있다면) -->
    <section class="stop-detail" th:if="${stop != null}">
        <h2>정류장 정보</h2>
        <div class="info-card">
            <div class="card-header">
                <i class="fas fa-map-marker-alt" aria-hidden="true"></i>
                <span th:text="${stop.name}">정류장명</span>
            </div>
            <div class="stop-info">
                <div class="info-item" th:if="${stop.location != null}">
                    <span class="label">위치:</span>
                    <span class="value" th:text="${stop.location}">위치정보</span>
                </div>
                <div class="info-item" th:if="${stop.explanation != null}">
                    <span class="label">설명:</span>
                    <span class="value" th:text="${stop.explanation}">설명</span>
                </div>
            </div>
        </div>
    </section>

    <section class="notice-section" aria-labelledby="notice-title">
        <h2 id="notice-title" class="notice-title">
            <i class="fas fa-exclamation-circle" aria-hidden="true"></i>
            <span>주의사항</span>
        </h2>
        <div class="notice-content">
            <p><i class="fas fa-circle-info" aria-hidden="true"></i> 요금 및 운행 시간은 변동될 수 있습니다. 수시로 시간 확인 바랍니다.</p>
            <p><i class="fas fa-circle-info" aria-hidden="true"></i> 서울버스는 중간 정류장 시간이 유동적이오니 승차장에 미리 대기하여 주시기 바랍니다.</p>
            <p><i class="fas fa-circle-info" aria-hidden="true"></i> 비수기에는 부득이한 사정으로 운행이 불가할 수 있습니다.</p>
        </div>
    </section>
</main>

<footer class="app-footer">
    <p>© 2025 연세대학교 </p>
</footer>

<script src="/last/transportation.js"></script>
<script src="/common/navbar.js"></script>

<style>
    /* 추가 스타일 */
    .search-info {
        margin-bottom: 2rem;
    }

    .search-params {
        display: flex;
        gap: 2rem;
        padding: 1rem;
        background: #f8f9fa;
        border-radius: 8px;
        margin-top: 1rem;
    }

    .param-item {
        display: flex;
        gap: 0.5rem;
    }

    .param-item .label {
        font-weight: 500;
        color: #666;
    }

    .param-item .value {
        font-weight: 600;
        color: #333;
    }

    .route-results {
        margin-bottom: 2rem;
    }

    .route-list {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .route-card {
        border: 1px solid #e0e0e0;
        border-radius: 12px;
        padding: 1.5rem;
        background: #fff;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .route-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #eee;
    }

    .route-name {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 600;
        font-size: 1.1rem;
    }

    .route-name i {
        color: #007bff;
    }

    .route-number {
        background: #28a745;
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 16px;
        font-size: 0.875rem;
        font-weight: 500;
    }

    .route-details {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .route-info {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .info-item {
        display: flex;
        gap: 0.5rem;
        min-width: 150px;
    }

    .info-item .label {
        color: #666;
        font-weight: 500;
    }

    .info-item .value {
        color: #333;
        font-weight: 600;
    }

    .stops-info h4 {
        margin: 0 0 0.5rem 0;
        color: #333;
        font-size: 1rem;
    }

    .stops-list {
        display: flex;
        flex-wrap: wrap;
        gap: 0.25rem;
        font-size: 0.9rem;
        color: #666;
    }

    .stop-item {
        white-space: nowrap;
    }

    .no-results {
        margin: 2rem 0;
    }

    .no-results-content {
        padding: 2rem;
        text-align: center;
        color: #666;
    }

    .no-results-content p {
        margin: 0.5rem 0;
    }

    .stop-detail {
        margin-bottom: 2rem;
    }

    .stop-info {
        padding: 1rem;
    }

    @media (max-width: 768px) {
        .search-params {
            flex-direction: column;
            gap: 1rem;
        }

        .route-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
        }

        .route-info {
            flex-direction: column;
            gap: 0.5rem;
        }
    }
</style>

</body>
</html>
</file>

<file path="src/main/resources/templates/upload.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <title>이미지 업로드</title>
</head>
<body>
<h1>이미지 업로드</h1>

<form method="POST" enctype="multipart/form-data" action="/api/images">
    <input type="file" name="imageFile" accept="image/*" required>
    <input type="text" name="name" placeholder="이름을 입력하세요" required>

    <button type="submit">업로드</button>
</form>

<div th:if="${message}">
    <p th:text="${message}"></p>
</div>

<div th:if="${imagePath}">
    <p>업로드된 이미지:</p>
    <img th:src="${imagePath}" alt="Uploaded Image" width="300">
</div>


</body>
</html>
</file>

<file path="src/main/resources/templates/userForm.html">
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="ko">
<head>
  <meta charset="UTF-8">
  <title>사용자 신규 등록</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-8">
<div class="max-w-xl mx-auto bg-white rounded-xl shadow p-8">
  <h1 class="text-2xl font-bold text-gray-800 mb-6">사용자 신규 등록</h1>

  <form action="/admin/users" method="post" enctype="multipart/form-data" class="space-y-6">
    <div>
      <label for="name" class="block text-sm font-medium text-gray-700">이름</label>
      <input type="text" id="name" name="name" required
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="email" class="block text-sm font-medium text-gray-700">이메일</label>
      <input type="email" id="email" name="email" required
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="password" class="block text-sm font-medium text-gray-700">비밀번호</label>
      <input type="password" id="password" name="password" required
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="roles" class="block text-sm font-medium text-gray-700">역할 (쉼표로 구분)</label>
      <input type="text" id="roles" name="roles" placeholder="예: ROLE_USER,ROLE_ADMIN"
             class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
    </div>
    <div>
      <label for="imageFile" class="block text-sm font-medium text-gray-700">프로필 이미지 파일</label>
      <input type="file" id="imageFile" name="imageFile" accept="image/*"
             class="mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-violet-50 file:text-violet-700 hover:file:bg-violet-100">
    </div>

    <div class="flex justify-end space-x-3">
      <a href="/admin/users" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">취소</a>
      <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">등록</button>
    </div>
  </form>
</div>
</body>
</html>
</file>

<file path="src/main/resources/data.sql">
-- id 는 자동으로 생성 됨

INSERT INTO stop (name)
VALUES ('고속버스터미널'),
       ('매지리'),
       ('만종역'),
       ('미래캠퍼스'),
       ('시청사거리'),
       ('여주역'),
       ('원주고속버스터미널'),
       ('원주세브란스 장례식장앞'),
       ('원주역');
</file>

<file path="src/test/java/edu/yonsei/hello_james/HelloJamesApplicationTests.java">
package edu.yonsei.hello_james;

import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

@SpringBootTest
class HelloJamesApplicationTests {

	@Test
	void contextLoads() {
	}

}
</file>

<file path=".gitattributes">
/gradlew text eol=lf
*.bat text eol=crlf
*.jar binary
</file>

<file path=".gitignore">
HELP.md
.gradle
build/
!gradle/wrapper/gradle-wrapper.jar
!**/src/main/**/build/
!**/src/test/**/build/

### STS ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache
bin/
!**/src/main/**/bin/
!**/src/test/**/bin/

### IntelliJ IDEA ###
.idea
*.iws
*.iml
*.ipr
out/
!**/src/main/**/out/
!**/src/test/**/out/

### NetBeans ###
/nbproject/private/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/

### VS Code ###
.vscode/
</file>

<file path="build.gradle">
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'edu.yonsei'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.modelmapper:modelmapper:2.4.0'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'org.springframework.boot:spring-boot-starter-security'


}
</file>

<file path="CLAUDE.md">
ㅋ# CLAUDE.md

This file provides guidance to Claude Code (claude.ai/code) when working with code in this repository.

## Project Overview

This is a Spring Boot web application called "hello-james" for managing campus facilities, transportation routes, and user authentication. The application provides both web views (using Thymeleaf) and API endpoints for campus navigation and facility information.

## Common Commands

### Build and Run
- `./gradlew build` - Build the application
- `./gradlew bootRun` - Run the application (starts on port 80)
- `./gradlew test` - Run tests
- `./gradlew clean` - Clean build artifacts

### Development
- `./gradlew bootRun --args='--spring.profiles.active=dev'` - Run with dev profile
- `./gradlew test --tests HelloJamesApplicationTests` - Run specific test class

## Architecture

### Core Structure
- **Package**: `edu.yonsei.hello_james`
- **Database**: MySQL with JPA/Hibernate (DDL auto-create enabled)
- **Security**: Spring Security with BCrypt password encoding
- **Frontend**: Thymeleaf templates with static resources (CSS/JS)

### Key Components
- **Entities**: Route, Stop, RouteStop, Facility, Internal, User
- **Controllers**: 
  - `ApiController` - REST endpoints under `/api`
  - `ViewController` - Thymeleaf view mappings
  - `AuthController` - Authentication/registration
- **Services**: Business logic for each entity type
- **Repositories**: JPA repositories for data access

### Data Model
- Transportation system with Routes containing multiple Stops via RouteStop junction table
- Facilities with image upload capabilities
- User management with role-based access (ADMIN role for `/admin/**` paths)
- Internal content management

### File Upload System
- Upload directory: `src/main/resources/static/uploads`
- Accessible via `/uploads/**` URL pattern
- ImageService handles file operations

### Security Configuration
- Most endpoints publicly accessible (`permitAll()`)
- Admin endpoints require ADMIN role
- Form-based authentication with custom login page
- CSRF disabled for API usage

### Database Configuration
- Uses MySQL connector
- Hibernate DDL auto-create mode (recreates schema on startup)
- SQL initialization from `data.sql` with sample stop data
- Connection details in `application.properties`
</file>

<file path="gradlew">
#!/bin/sh

#
# Copyright © 2015-2021 the original authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#

##############################################################################
#
#   Gradle start up script for POSIX generated by Gradle.
#
#   Important for running:
#
#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
#       noncompliant, but you have some other compliant shell such as ksh or
#       bash, then to run this script, type that shell name before the whole
#       command line, like:
#
#           ksh Gradle
#
#       Busybox and similar reduced shells will NOT work, because this script
#       requires all of these POSIX shell features:
#         * functions;
#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
#         * compound commands having a testable exit status, especially «case»;
#         * various built-in commands including «command», «set», and «ulimit».
#
#   Important for patching:
#
#   (2) This script targets any POSIX shell, so it avoids extensions provided
#       by Bash, Ksh, etc; in particular arrays are avoided.
#
#       The "traditional" practice of packing multiple parameters into a
#       space-separated string is a well documented source of bugs and security
#       problems, so this is (mostly) avoided, by progressively accumulating
#       options in "$@", and eventually passing that to Java.
#
#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;
#       see the in-line comments for details.
#
#       There are tweaks for specific operating systems such as AIX, CygWin,
#       Darwin, MinGW, and NonStop.
#
#   (3) This script is generated from the Groovy template
#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
#       within the Gradle project.
#
#       You can find Gradle at https://github.com/gradle/gradle/.
#
##############################################################################

# Attempt to set APP_HOME

# Resolve links: $0 may be a link
app_path=$0

# Need this for daisy-chained symlinks.
while
    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
    [ -h "$app_path" ]
do
    ls=$( ls -ld "$app_path" )
    link=${ls#*' -> '}
    case $link in             #(
      /*)   app_path=$link ;; #(
      *)    app_path=$APP_HOME$link ;;
    esac
done

# This is normally unused
# shellcheck disable=SC2034
APP_BASE_NAME=${0##*/}
# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)
APP_HOME=$( cd -P "${APP_HOME:-./}" > /dev/null && printf '%s\n' "$PWD" ) || exit

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD=maximum

warn () {
    echo "$*"
} >&2

die () {
    echo
    echo "$*"
    echo
    exit 1
} >&2

# OS specific support (must be 'true' or 'false').
cygwin=false
msys=false
darwin=false
nonstop=false
case "$( uname )" in                #(
  CYGWIN* )         cygwin=true  ;; #(
  Darwin* )         darwin=true  ;; #(
  MSYS* | MINGW* )  msys=true    ;; #(
  NONSTOP* )        nonstop=true ;;
esac

CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar


# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD=$JAVA_HOME/jre/sh/java
    else
        JAVACMD=$JAVA_HOME/bin/java
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD=java
    if ! command -v java >/dev/null 2>&1
    then
        die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
fi

# Increase the maximum file descriptors if we can.
if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
    case $MAX_FD in #(
      max*)
        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC2039,SC3045
        MAX_FD=$( ulimit -H -n ) ||
            warn "Could not query maximum file descriptor limit"
    esac
    case $MAX_FD in  #(
      '' | soft) :;; #(
      *)
        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.
        # shellcheck disable=SC2039,SC3045
        ulimit -n "$MAX_FD" ||
            warn "Could not set maximum file descriptor limit to $MAX_FD"
    esac
fi

# Collect all arguments for the java command, stacking in reverse order:
#   * args from the command line
#   * the main class name
#   * -classpath
#   * -D...appname settings
#   * --module-path (only if needed)
#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.

# For Cygwin or MSYS, switch paths to Windows format before running java
if "$cygwin" || "$msys" ; then
    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )

    JAVACMD=$( cygpath --unix "$JAVACMD" )

    # Now convert the arguments - kludge to limit ourselves to /bin/sh
    for arg do
        if
            case $arg in                                #(
              -*)   false ;;                            # don't mess with options #(
              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
                    [ -e "$t" ] ;;                      #(
              *)    false ;;
            esac
        then
            arg=$( cygpath --path --ignore --mixed "$arg" )
        fi
        # Roll the args list around exactly as many times as the number of
        # args, so each arg winds up back in the position where it started, but
        # possibly modified.
        #
        # NB: a `for` loop captures its iteration list before it begins, so
        # changing the positional parameters here affects neither the number of
        # iterations, nor the values presented in `arg`.
        shift                   # remove old arg
        set -- "$@" "$arg"      # push replacement arg
    done
fi


# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'

# Collect all arguments for the java command:
#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,
#     and any embedded shellness will be escaped.
#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be
#     treated as '${Hostname}' itself on the command line.

set -- \
        "-Dorg.gradle.appname=$APP_BASE_NAME" \
        -classpath "$CLASSPATH" \
        org.gradle.wrapper.GradleWrapperMain \
        "$@"

# Stop when "xargs" is not available.
if ! command -v xargs >/dev/null 2>&1
then
    die "xargs is not available"
fi

# Use "xargs" to parse quoted args.
#
# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
#
# In Bash we could simply go:
#
#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
#   set -- "${ARGS[@]}" "$@"
#
# but POSIX shell has neither arrays nor command substitution, so instead we
# post-process each arg (as a line of input to sed) to backslash-escape any
# character that might be a shell metacharacter, then use eval to reverse
# that process (while maintaining the separation between arguments), and wrap
# the whole thing up as a single "set" statement.
#
# This will of course break if any of these variables contains a newline or
# an unmatched quote.
#

eval "set -- $(
        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS" |
        xargs -n1 |
        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
        tr '\n' ' '
    )" '"$@"'

exec "$JAVACMD" "$@"
</file>

<file path="gradlew.bat">
@rem
@rem Copyright 2015 the original author or authors.
@rem
@rem Licensed under the Apache License, Version 2.0 (the "License");
@rem you may not use this file except in compliance with the License.
@rem You may obtain a copy of the License at
@rem
@rem      https://www.apache.org/licenses/LICENSE-2.0
@rem
@rem Unless required by applicable law or agreed to in writing, software
@rem distributed under the License is distributed on an "AS IS" BASIS,
@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
@rem See the License for the specific language governing permissions and
@rem limitations under the License.
@rem
@rem SPDX-License-Identifier: Apache-2.0
@rem

@if "%DEBUG%"=="" @echo off
@rem ##########################################################################
@rem
@rem  Gradle startup script for Windows
@rem
@rem ##########################################################################

@rem Set local scope for the variables with windows NT shell
if "%OS%"=="Windows_NT" setlocal

set DIRNAME=%~dp0
if "%DIRNAME%"=="" set DIRNAME=.
@rem This is normally unused
set APP_BASE_NAME=%~n0
set APP_HOME=%DIRNAME%

@rem Resolve any "." and ".." in APP_HOME to make it shorter.
for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi

@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"

@rem Find java.exe
if defined JAVA_HOME goto findJavaFromJavaHome

set JAVA_EXE=java.exe
%JAVA_EXE% -version >NUL 2>&1
if %ERRORLEVEL% equ 0 goto execute

echo. 1>&2
echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2
echo. 1>&2
echo Please set the JAVA_HOME variable in your environment to match the 1>&2
echo location of your Java installation. 1>&2

goto fail

:findJavaFromJavaHome
set JAVA_HOME=%JAVA_HOME:"=%
set JAVA_EXE=%JAVA_HOME%/bin/java.exe

if exist "%JAVA_EXE%" goto execute

echo. 1>&2
echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2
echo. 1>&2
echo Please set the JAVA_HOME variable in your environment to match the 1>&2
echo location of your Java installation. 1>&2

goto fail

:execute
@rem Setup the command line

set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar


@rem Execute Gradle
"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %*

:end
@rem End local scope for the variables with windows NT shell
if %ERRORLEVEL% equ 0 goto mainEnd

:fail
rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
rem the _cmd.exe /c_ return code!
set EXIT_CODE=%ERRORLEVEL%
if %EXIT_CODE% equ 0 set EXIT_CODE=1
if not ""=="%GRADLE_EXIT_CONSOLE%" exit %EXIT_CODE%
exit /b %EXIT_CODE%

:mainEnd
if "%OS%"=="Windows_NT" endlocal

:omega
</file>

<file path="settings.gradle">
rootProject.name = 'hello-james'
</file>

<file path="src/main/java/edu/yonsei/hello_james/controller/ApiController.java">
package edu.yonsei.hello_james.controller;


import edu.yonsei.hello_james.Dto.*;
import edu.yonsei.hello_james.entity.*;
import edu.yonsei.hello_james.service.*;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;


// 사랑합니다.
@Controller
@Slf4j
@RequestMapping("/api")
@RequiredArgsConstructor
public class ApiController {
    private final UserService userService;
    private final FacilityService facilityService;
    private final RouteService routeService;
    private final StopService stopService;
    private final RouteStopService routeStopService;
    private final InternalService internalService;
    private final ImageService imageService;

//    post 등록

    @PostMapping("/users")
    @ResponseBody
    public User UserApi(@RequestBody UserDto userDto) {
        User user =userService.saveUser(userDto);
        return user;
    }

    @PostMapping("/users/batch")
    @ResponseBody
    public List<User> UserApi(@RequestBody List<UserDto> userDtoList) {
        List<User> users = new ArrayList<>();
        for (UserDto userDto : userDtoList) {
            User user = userService.saveUser(userDto);
            users.add(user);
        }
        return users;
    }


    @PostMapping("/facilities")
    @ResponseBody
    public Facility FacilityApi(@RequestBody FacilityDto facilityDto) {
        Facility facility =facilityService.saveFacility(facilityDto);
        return facility;
    }

    @PostMapping("/facilities/batch")
    @ResponseBody
    public List<Facility> FacilityApi(@RequestBody List<FacilityDto> facilityDtoList) {
        List<Facility> facilities = new ArrayList<>();
        for (FacilityDto facilityDto : facilityDtoList) {
            Facility facility = facilityService.saveFacility(facilityDto);
            facilities.add(facility);
        }
        return facilities;
    }

    @PostMapping("/facilities/{name}/internals")
    @ResponseBody
    public  Internal InternalApi(@PathVariable String name, @RequestBody InternalDto internalDto) {

        return internalService.saveInternal(name, internalDto);

    }





    @PostMapping("/routes")
    @ResponseBody
    public Route RouteApi(@RequestBody RouteDto RouteDto) {
        Route route = routeService.saveRoute(RouteDto);
        return route;
    }

    @PostMapping("/stops")
    @ResponseBody
    public Stop StopApi(@RequestBody StopDto stopDto) {
        Stop stop = stopService.saveStop(stopDto);
        return stop;
    }

    @PostMapping("/routeStops")
    @ResponseBody
    public String  RouteStopApi(@RequestBody RouteStopDto routeStopDto) {
        //routeStopDto 는  StartTime 과  StopDto List
        // route를 신규생성 &  stop 은 기존에 있으면 가져오고 없으면 객체 새로 생성한다.

       routeStopService.saveRouteStop(routeStopDto);

       return "ok";
    }


    @PostMapping("/routeStops/batch")
    @ResponseBody
    public String  RouteStopApi(@RequestBody List<RouteStopDto> routeStopDtoList) {
        //routeStopDto 는  StartTime 과  StopDto List
        // route를 신규생성 &  stop 은 기존에 있으면 가져오고 없으면 객체 새로 생성한다.


        for ( RouteStopDto routeStopDto : routeStopDtoList) {
            routeStopService.saveRouteStop(routeStopDto);

        }


        return "ok";
    }






}
</file>

<file path="src/main/resources/application.properties">
spring.application.name=hello-james



spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#mysql connect info
#spring.datasource.url=jdbc:mysql://localhost:3306/homework?serverTimezone=UTC
#spring.datasource.url=jdbc:mysql://221.144.188.96:3306/homework?serverTimezone=UTC
spring.datasource.url=jdbc:mysql://220.116.184.95:3306/homework2?serverTimezone=UTC



#db????

#mysql name and password1
spring.datasource.username=root
spring.datasource.password=10041004



#jpa settings
spring.jpa.properties.hibernate.show_sql=true


spring.jpa.properties.hibernate.format_sql=true


logging.level.org.hibernate.type.descriptor.sql=trace


spring.jpa.hibernate.ddl-auto=update


spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect


# application.properties
app.upload-dir=src/main/resources/static/uploads


spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

server.port=80
</file>

</files>
